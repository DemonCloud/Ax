function sh_isEmailAddress(t){return!/^mailto:/.test(t)&&-1!==t.indexOf("@")}function sh_setHref(t,e,n){var r=n.substring(t[e-2].pos,t[e-1].pos);r.length>=2&&"<"===r.charAt(0)&&">"===r.charAt(r.length-1)&&(r=r.substr(1,r.length-2)),sh_isEmailAddress(r)&&(r="mailto:"+r),t[e-2].node.href=r}function sh_konquerorExec(t){var e=[""];return e.index=t.length,e.input=t,e}function sh_highlightString(t,e){if(/Konqueror/.test(navigator.userAgent)&&!e.konquered){for(var n=0;n<e.length;n++)for(var r=0;r<e[n].length;r++){var a=e[n][r][0];"$"===a.source&&(a.exec=sh_konquerorExec)}e.konquered=!0}var o=document.createElement("a"),s=document.createElement("span"),i=[],c=0,u=[],l=0,d=null,p=function(e,n){var r=e.length;if(0!==r){if(!n){var a=u.length;if(0!==a){var p=u[a-1];p[3]||(n=p[1])}}if(d!==n&&(d&&(i[c++]={pos:l},"sh_url"===d&&sh_setHref(i,c,t)),n)){var m;m="sh_url"===n?o.cloneNode(!1):s.cloneNode(!1),m.className=n,i[c++]={node:m,pos:l}}l+=r,d=n}},m=/\r\n|\r|\n/g;m.lastIndex=0;for(var f=t.length;l<f;){var h,g,v=l,y=m.exec(t);null===y?(h=f,g=f):(h=y.index,g=m.lastIndex);for(var b=t.substring(v,h),x=[];;){var _,w=l-v,k=u.length;_=0===k?0:u[k-1][2];var j=e[_],A=j.length,E=x[_];E||(E=x[_]=[]);for(var S=null,N=-1,O=0;O<A;O++){var T;if(O<E.length&&(null===E[O]||w<=E[O].index))T=E[O];else{var B=j[O][0];B.lastIndex=w,T=B.exec(b),E[O]=T}if(null!==T&&(null===S||T.index<S.index)&&(S=T,N=O,T.index===w))break}if(null===S){p(b.substring(w),null);break}S.index>w&&p(b.substring(w,S.index),null);var z,D=j[N],V=D[1];if(V instanceof Array)for(var R=0;R<V.length;R++)z=S[R+1],p(z,V[R]);else z=S[0],p(z,V);switch(D[2]){case-1:break;case-2:u.pop();break;case-3:u.length=0;break;default:u.push(D)}}d&&(i[c++]={pos:l},"sh_url"===d&&sh_setHref(i,c,t),d=null),l=g}return i}function sh_getClasses(t){var e=[],n=t.className;if(n&&n.length>0)for(var r=n.split(" "),a=0;a<r.length;a++)r[a].length>0&&e.push(r[a]);return e}function sh_addClass(t,e){for(var n=sh_getClasses(t),r=0;r<n.length;r++)if(e.toLowerCase()===n[r].toLowerCase())return;n.push(e),t.className=n.join(" ")}function sh_extractTagsFromNodeList(t,e){for(var n=t.length,r=0;r<n;r++){var a=t.item(r);switch(a.nodeType){case 1:if("br"===a.nodeName.toLowerCase()){var o;o=/MSIE/.test(navigator.userAgent)?"\r":"\n",e.text.push(o),e.pos++}else e.tags.push({node:a.cloneNode(!1),pos:e.pos}),sh_extractTagsFromNodeList(a.childNodes,e),e.tags.push({pos:e.pos});break;case 3:case 4:e.text.push(a.data),e.pos+=a.length}}}function sh_extractTags(t,e){var n={};return n.text=[],n.tags=e,n.pos=0,sh_extractTagsFromNodeList(t.childNodes,n),n.text.join("")}function sh_mergeTags(t,e){var n=t.length;if(0===n)return e;var r=e.length;if(0===r)return t;for(var a=[],o=0,s=0;o<n&&s<r;){var i=t[o],c=e[s];i.pos<=c.pos?(a.push(i),o++):(a.push(c),e[s+1].pos<=i.pos?(s++,a.push(e[s]),s++):(a.push({pos:i.pos}),e[s]={node:c.node.cloneNode(!1),pos:i.pos}))}for(;o<n;)a.push(t[o]),o++;for(;s<r;)a.push(e[s]),s++;return a}function sh_insertTags(t,e){for(var n=document,r=document.createDocumentFragment(),a=0,o=t.length,s=0,i=e.length,c=r;s<i||a<o;){var u,l;if(a<o?(u=t[a],l=u.pos):l=i,l<=s){if(u.node){var d=u.node;c.appendChild(d),c=d}else c=c.parentNode;a++}else c.appendChild(n.createTextNode(e.substring(s,l))),s=l}return r}function sh_highlightElement(t,e){sh_addClass(t,"sh_sourceCode");for(var n=[],r=sh_extractTags(t,n),a=sh_highlightString(r,e),o=sh_mergeTags(n,a),s=sh_insertTags(o,r);t.hasChildNodes();)t.removeChild(t.firstChild);t.appendChild(s)}function sh_getXMLHttpRequest(){if(window.ActiveXObject)return new ActiveXObject("Msxml2.XMLHTTP");if(window.XMLHttpRequest)return new XMLHttpRequest;throw"No XMLHttpRequest implementation available"}function sh_load(language,element,prefix,suffix){if(language in sh_requests)return void sh_requests[language].push(element);sh_requests[language]=[element];var request=sh_getXMLHttpRequest(),url=prefix+"sh_"+language+suffix;request.open("GET",url,!0),request.onreadystatechange=function(){if(4===request.readyState)try{if(request.status&&200!==request.status)throw"HTTP error: status "+request.status;eval(request.responseText);for(var elements=sh_requests[language],i=0;i<elements.length;i++)sh_highlightElement(elements[i],sh_languages[language])}finally{request=null}},request.send(null)}function sh_highlightDocument(t,e){for(var n=document.getElementsByTagName("pre"),r=0;r<n.length;r++)for(var a=n.item(r),o=sh_getClasses(a),s=0;s<o.length;s++){var i=o[s].toLowerCase();if("sh_sourcecode"!==i&&"sh_"===i.substr(0,3)){var c=i.substring(3);if(c in sh_languages)sh_highlightElement(a,sh_languages[c]);else{if("string"!=typeof t||"string"!=typeof e)throw'Found <pre> element with class="'+i+'", but no such language exists';sh_load(c,a,t,e)}break}}}!(function(){requirejs.config({baseUrl:"./app/",paths:{text:"scripts/plugins/require-text.min",route:"route",struct:"scripts/libs/struct.min",aix:"scripts/libs/aix.min"},shim:{aix:{deps:["struct"],exports:"aix"}}}),require(["route"])})(),(function(t,e,n){"function"==typeof define&&define.amd?define("struct",[],(function(){return n(e)})):"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(e):t.struct=n(e)})(this,struct=function(){return this},(function(t){"use strict";function e(e,n){t[n]=function(){return e}}function n(e,n){t[n]=function(){return e.apply(this,arguments)}}function r(t,e,n){return n?q(e,(function(e,r){(xn(n)?F(n,r):null!=n&&r===n)||(t[r]=e)})):q(e,(function(e,n){t[n]=e})),t}function a(t,e,n){return r(r(f(t)?[]:{},t),e,n)}function o(t,e,n){return c(e)?Object.defineProperties(t,e):Object.defineProperty(t,e,n)}function s(t){var e=D(arguments,1);return function(){return t.apply(null,e.concat(D(arguments)))}}function i(t,e){return function(){return(e.apply(null,arguments)?t:A).apply(null,arguments)}}function c(t){return"function"==typeof t||"object"==typeof t&&!!t}function u(t){return"function"==typeof t&&t===t&&!!t}function l(t){return"number"==typeof t&&+t===t}function d(t){return null==t||"object"!=typeof t}function p(t){return null!=t&&_n.test(t)}function m(t,e){return pn.call(t)==="[object "+e+"]"}function f(t){return null!==t&&"number"==typeof t.length&&c(t)&&(xn(t)||m(t,"Arguments")||m(t,"NodeList")||m(t,"HTMLCollection")||m(t,"Storage"))}function h(t){return"number"==typeof t&&t!==t}function g(t){return+t===t&&t%1==0}function v(t){return+t===t&&t%1!=0}function y(t){return t instanceof Date}function b(t){return!d(t)&&!Se(t)}function x(t){return c(t)&&t.nodeType>0&&t instanceof Node}function _(t){return"function"==typeof t?bn.test(Function.prototype.toString.call(t)):t&&"object"==typeof t&&yn.test(pn.call(t))||!1}function w(t){var e=[xn(t),u(t),null===t,void 0===t,m(t,"Arguments"),m(t,"Boolean"),m(t,"String"),m(t,"Number"),m(t,"Date"),m(t,"RegExp"),m(t,"NodeList"),m(t,"HTMLCollection")];return wn[$(e,st(!0))]||"object"}function k(t){var e=function(){};e.prototype=t;for(var n=8;n--;)new e;return t}function j(){}function A(t){return t}function E(t){return null!=t?"function"==typeof t.toString?t.toString():t+"":""}function S(t){return"number"==typeof+t&&+t==+t?+t:t>>0}function N(t){var e=parseInt(~t.indexOf("#")?t.substr(1):t,16);return{r:e>>16,g:(65280&e)>>8,b:255&e}}function O(t){return((1<<24)+(t.r<<16)+(t.g<<8)+t.b).toString(16).substr(1)}function T(t){var e=[];return c(t)||m(t,"String")?e=Oe(t):null!=t&&e.push(t),e}function B(t){return-S(t)}function z(){return D(arguments)}function D(t,e,n){return f(t)?dn.call(t,e,n):[]}function V(t){return null!=t?xn(t)?Object.keys(t).map(S):Object.keys(t):[]}function R(t,e,n){for(var r=0,a=t.length;r<a;r++)e.call(2 in arguments?n:t,t[r],r,t);return t}function C(t,e,n){var r=function(n){e.call(this,t[n],n,t)};return R(V(t),r,2 in arguments?n:t),t}function q(t){return xn(t)?R.apply(t,arguments):c(t)&&!u(t)&&null!==t?C.apply(t,arguments):t}function M(t,e){return e?L(t):f(t)?D(t):d(t)?t:JSON.parse(JSON.stringify(t))}function L(t){if(f(t))return D(t).map(i(L,Be(d)));if(!(d(t)||t instanceof Node)){var e={};if(t.constructor.prototype!==Object.prototype){var n=function(){};n.prototype=t.constructor.prototype,e=new n}return C(t,(function(t,e){this[e]=d(t)?t:L(t)}),e),e}return t}function I(t,e){return t.test(e)}function F(t,e,n){for(var r=m(e,"RegExp")?I:n?It:at,a=!1,o=d(t)?[]:V(t),s=o.length;s--&&!(a=r(e,t[o[s]])););return a}function P(t,e,n){return F(d(t)?[]:V(t),e,n)}function H(t,e,n){return n?t.splice(e,1):delete t[e]}function U(t,e,n){for(var r=m(e,"RegExp")?I:n?It:at,a=xn(t),o=V(t),s=0;s<o.length;s++)r(e,t[o[s]])&&H(t,o[s],a)&&a&&o.pop(s--);return t}function X(t,e,n){var r=[],a=m(e,"RegExp")?s(I,e):u(e)?e:st(e);return q(M(t),(function(t,e,r){a.apply(r,arguments)&&this.push(n?e:t)}),r),r}function Z(t,e,n){return X(t,Be(e),n)}function J(t,e){for(var n=!0,r=V(t),a=r.length;a--&&(n=e(t[r[a]],r[a],t)););return n}function G(t,e){for(var n=!1,r=V(t),a=r.length;a--&&!(n=e(t[r[a]],r[a],t)););return n}function $(t,e){var n=X(t,e,!0);return 1===n.length?n.pop():n.length?n:null}function K(t,e){var n=$(t,e);return d(n)?n:n.pop()}function W(t,e){var n=$(t,e);return d(n)?n:n.shift()}function Y(t,e){var n=W(t,e);return null===n?n:t[n]}function Q(t){return f(t)?t[0]:t}function tt(t){return f(t)?t[t.length-1]:t}function et(t,e){return q(M(t),(function(t,n,r){r[n]=this?e.apply(r,arguments):t[e]}),u(e))}function nt(t,e){var n={};return C(t,(function(r){n[e.apply(t,arguments)]=r})),n}function rt(t,e){var n=[],r=m(e,"RegExp")?s(I,e):u(e)?e:st(e);if(xn(t))for(var a=0,o=t.length;a<o;a++)r.call(t,t[a],a,t)&&n.push(t.splice(a,1).pop(a--));else if(c(t))for(var i in t)if(t.hasOwnProperty(i)&&r.call(t,t[i],i,t)){var l={};l[i]=t[i],n.push(l),delete t[i]}return n}function at(t,e){return t===e}function ot(t,e){return t!==e}function st(t){return function(e){return e===t}}function it(t){for(var e={},n="number"==typeof Q(t),r=0;r<t.length;r++)e[t[r]]||(e[t[r]]=!0);return V(e).map(n?S:A)}function ct(t,e){for(var n=D(t),r=e?It:at,a=0;a<n.length;a++)if(a!==n.length-1)for(var o=a+1;o<n.length;o++)r(n[a],n[o])&&n.splice(o--,1);return n}function ut(t,e){var n=u(e);return et(t,(function(t){return(n?e:t[e]).apply(t,arguments)}))}function lt(t,e,n){var r=[];return E(e),q(t,(function(t){var r=ke(t,e,n);return void 0!==r&&this.push(r)}),r),r}function dt(t,e){var n={},r=u(e);return q(t,(function(t){var n=r?e(t):ke(t,e);n&&(this[n]?this[n].push(t):this[n]=[t])}),n),n}function pt(t,e){var n={},r=u(e);return q(t,(function(t){var a=r?e(t):ke(t,e);a&&(n[a]?this[a]+=1:this[a]=1)}),n),n}function mt(t){for(var e=[],n=V(t),r=0,a=n.length;r<a;r++)e.push([n[r],t[n[r]]]);return e}function ft(t){for(var e={},n=0,r=t.length;n<r;n++)e[t[n][0]]=t[n][1];return e}function ht(t){return t=X(t,Be(s(F,St(D(arguments,1),!0))))}function gt(t){var e=St(D(arguments,1),!0);return t=X(t,(function(t,n){return!F(e,n)}))}function vt(t){for(var e,n=t.length,r=new Array(n),a=0;a<n;a++)e=Nt(0,a),e!==a&&(r[a]=r[e]),r[e]=t[a];return r}function yt(t,e){for(var n=parseInt(S(e))||2,r=[],a=0,o=t.length;a<o;a+=n)r.push(t.slice(a,a+n));return r}function bt(t){return X(t,A)}function xt(){return fn.apply([],arguments)}function _t(){for(var t=[],e=xt.apply([],arguments),n=e.shift(e.push(e.length-1));0!==e.length;n=e.shift())F(e,n,!0)?U(e,n,!0):t.push(n);return t}function wt(){var t=[],e=D(arguments);return e.reduce((function(e,n){var r=[];return Se(e)&&Se(n)&&R(e,(function(t){F(this,t,!0)&&r.push(t)}),n),t=r}),e.shift()||[]),t}function kt(){return ct(xt.apply([],arguments),!0)}function jt(t,e){return D(t,S(e)||1)}function At(t,e){return D(t,0,-(S(e)||1))}function Et(t,e){for(var n=D(t),r=void 0===this?"shift":"pop",a=m(e,"RegExp")?s(I,e):u(e)?e:st(e),o=n.length;o--&&!a(n[r]()););return n}function St(){var t=xt.apply([],arguments),e=!!m(tt(t),"Boolean")&&t.pop();return D(t).reduce((function(t,n){return t.concat(e&&xn(n)?St(n,e):n)}),[])}function Nt(t,e){return l(e)||(e=t,t=0),t+Math.floor(Math.random()*(e-t+1))}function Ot(t,e,n){l(e)||(e=t,t=0);var r=Math.random()*(e-t)+t;return S(n)?+r.toFixed(n):r}function Tt(t){return 100*Math.random()<Math.max(1,Math.min(S(t||50),99))}function Bt(t,e){var n=t?jn+Sn:"";return n=(e?En:An)+n,n.charAt(Nt(0,Se(n)-1))}function zt(t){return(t?"#":"")+O({r:Nt(0,255),g:Nt(0,255),b:Nt(0,255)})}function Dt(t,e,n){for(var r=S(t)||2,a=[],o=r;o--;)a[o]=Bt(e,n);return a.join("")}function Vt(){var t=Ne();return new Date(t+(Tt()?A:B)(Nt(0,t)))}function Rt(t){return t=S(t)>0?S(t):2,Nt(1,t%2==0?t:t+1)}function Ct(e){var n=D(arguments,1);return function(){for(var r=0,a=n.slice(),o=0,s=a.length;o<s;o++)a[o]===t&&(a[o]=arguments[r++]);for(;r<arguments.length;)a.push(arguments[r++]);return e.apply(this,a)}}function qt(t,e){var n;return function(){return--t>0?n=e.apply(this,arguments):e=null,n}}function Mt(t,e){return Ct(qt,(S(e)||1)+1)(t)}function Lt(t){return Mt(t)}function It(t,e){if(t===e||pn.call(t)!==pn.call(e)||d(t)&&d(e))return t===e;if(t.toString()===e.toString()){var n=V(t),r=V(e);if(n.length===r.length){for(var a=n.length;a--;)if(!It(t[n[a]],e[n[a]]))return!1;return!0}}return!1}function Ft(t){var e={};return R(t,(function(t){e[t.name]=t.value})),e}function Pt(t){return decodeURIComponent(t.replace(/\+/g," "))}function Ht(t){return encodeURIComponent(t).replace(" ","%20")}function Ut(t){for(var e,n=E(t).split("#").shift(),r=n.indexOf("?"),a={},o=~r?n.substr(r+1):n;e=On.exec(o);)a[Pt(e[1])]=Pt(e[2]);return a}function Xt(t){var e=M(t);for(var n in e)e[n]=Ht(c(e[n])?JSON.stringify(e[n]):e[n]);return JSON.stringify(e).replace(/["{}]/g,"").replace(/:/g,"=").replace(/,/g,"&").replace(Nn,"")}function Zt(t){return mn.call(t)}function Jt(t){return t.replace(Hn,"")}function Gt(t){return t.replace(Un,"")}function $t(t){var e=~t.search("-")?"-":~t.search("_")?"_":"";if(e){e=t.split(e);for(var n=1;n<e.length;n++)e[n]=Kt(e[n]);return e.join("")}return t}function Kt(t){return t.charAt(0).toUpperCase()+t.substr(1)}function Wt(t){return Zt(t).replace(Ln,"").replace(Pn," ").replace(Xn,"><").replace(Zn,"<").replace(Jn,">").replace(Gn,"</")}function Yt(t,e,n){var r=n?"toUpperCase":"toLowerCase",a=E(e)||"-";return t.replace(In,(function(t,e){return(e>0?a:"")+t[r]()}))}function Qt(t){return Bn[t]||t}function te(t){return zn[t]||t}function ee(t){return"\\"+Vn[t]}function ne(t){return+t===t?t:t.replace(Rn,Qt)}function re(t){return+t===t?t:t.replace(Cn,te)}function ae(t){return t.replace(qn,"").replace(Mn,"")}function oe(t){return Wt(t.replace(Mn,""))}function se(t){var e="",n=Kn.exec(Zt(t)),r=n[1],a=n[2];if(r)switch(r.toLowerCase()){case"end":e="';\n}); _p+='";break;case"if":case"exist":a=a.split(" then "),e="'; var "+a[0]+" = "+a[0]+" || false; _ext("+a[0]+","+(a[1]?a[1].toString()+",":"")+"function(){ _p+='";break;case"for":case"each":a=a.split(" in "),e=ie("op",a[1],a[0]);break;case"not":case"cat":case"extend":a=a.split(" with "),e=ce(r,a[1],a[0]);break;default:a=a.split(" use "),e=ce(r,a[0],a[1]||"",!0)}return e}function ie(t,e,n){return"';\n struct."+t+"()("+e+",function("+n.replace(Wn,"")+"){\n _p+='"}function ce(t,e,n,r){var a=t.split(":");return"'; "+(r?e+"=":"")+"struct."+a[0]+'("'+(a[1]||"")+'")('+e+","+n.replace(Wn,"")+"); _p+='"}function ue(e,n,r){var a,o=0,s="_p+='",i=c(n)?r:"string"==typeof n?n:"",u=c(n)?n:{},l=D(arguments,2),d=new RegExp((this.escape||Tn)+"|"+(this.interpolate||Tn)+"|"+(this.command||Tn)+"|"+(this.evaluate||Tn)+"|$","g");Zt(e||"").replace(d,(function(t,n,r,a,i,c){return s+=e.slice(o,c).replace(Dn,ee),o=c+t.length,n?s+="'+((_t=("+n+"))==null?'':_(_t))+'":r?s+="'+((_t=("+r+"))==null?'':_t)+'":a?s+=se(a,s):i&&(s+="';\n"+i+"\n_p+='"),t})).replace(/_p\+=\'\'/gim,""),s="with(__("+(i?"{}":"__({},_x_||{})")+",_bounds)){\n"+s+"';\n}",s="var _t,_d,_ext=struct.exist(),_=struct.html('encode'),__=struct.extend(),_p='';\n"+s+"\nreturn _p;";try{a=hn("(function("+(i||"_x_")+",_bounds,struct"+(l.length?","+l.toString():"")+"){"+s+"})")}catch(t){throw console.error(t.res=s),t}return function(e){return It(arguments,a.pre)?a.complete:(a.pre=arguments,a.complete=Zt(a.apply(this,[e,u,t].concat(D(arguments,1)))))}}function le(t){var e={};return R(t?t.split(";"):[],(function(t){var n=(t||"").search("=");if(~n){var r=Zt(t.substr(0,n));r.length&&(e[r]=Zt(t.substr(n+1)))}})),e}function de(t){var e=D(arguments),n=e.length,r=le(document.cookie);if(n){if(1===n)return r[t];var a=new Date;return a.setDate(a.getDate()+365),document.cookie=Zt(e[0]+"="+(e[1]||"")+";expires="+(e[2]||a.toUTCString())+";path="+(e[3]||"/")+";domain="+(e[4]||"")+";"+(e[5]?"secure":"")),!0}return r}function pe(t,e,n){if(t)switch(e){case 0:return Xt(n||{});case 1:return JSON.stringify(n||{});default:return Xt(n||{})}return n}function me(t){var e=r({url:"",type:"GET",param:gn,charset:"utf-8",vaild:!0,cache:!1,success:j,error:j,loading:j,loadend:j,header:gn,username:null,password:null,timeout:0,aysnc:!0,contentType:!0},t||{}),n=vn.localStorage;if(e.cache){n.getItem("_")||n.setItem("_","{}");var a=JSON.parse(n.getItem("_")),o=a[e.url||vn.location.href.split("#").shift()];if(void 0!==o)return e.sucess.call(vn,o)}var s,i=new XMLHttpRequest;return"GET"===e.type.toUpperCase()&&e.param&&(e.url+=(~e.url.search(/\?/g)?"&":V(e.param).length?"?":"")+Xt(e.param),e.param=null),i.addEventListener("loadstart",e.loading),i.addEventListener("loadend",e.loadend),i.open(e.type,e.url,e.aysnc,e.username,e.password),s=c(e.header)?e.header["Content-Type"]||"application/x-www-form-urlencoded":"application/x-www-form-urlencoded",e.header!==gn&&c(e.header)&&C(e.header,(function(t,e){i.setRequestHeader(e,t)})),"POST"===e.type.toUpperCase()&&!0===e.contentType&&-1===(s||"").search("json")&&i.setRequestHeader("Content-Type",s+";chartset="+e.charset),i.setRequestHeader("X-Requested-With","XMLHttpRequest"),i.setRequestHeader("Struct-Requested","StructHttpRequest"),i.onreadystatechange=function(t){if(4===i.readyState&&i.responseText){var r=i.status;if(r>=200&&r<300||304===r){if(e.success.call(vn,i.responseText,i,t),e.cache){var a=JSON.parse(n.getItem("_"));a[e.url||vn.location.href.split("#")[0]]=i.responseText,n.setItem("_",JSON.stringify(a))}}else e.error.call(vn,i,t)}},S(e.timeout)&&(i.timeout=1e3*S(e.timeout),i.ontimeout=function(t){4===i.readyState&&i.responseText||e.error.call(vn,i),i.abort()}),i.send(e.param?c(e.param)?pe(e.contentType,s,e.param):e.param:null),i}function fe(t){var e=r({url:"",param:gn,key:"callback",callback:("jsonp"+Math.random()).replace(".",""),timeout:5,success:j,error:j},t||{}),n=e.url+"?"+Xt(e.param)+(V(e.param).length?"&":"")+e.key+"="+e.callback,a=document.createElement("script");a.src=n,vn[e.callback]=function(t){clearTimeout(e.timesetup),document.body.removeChild(a),vn[e.callback]=null,e.success(t)},document.body.append(a),S(e.timeout)&&(e.timesetup=setTimeout((function(){document.body.removeChild(a),vn[e.callback]=null,e.error()}),1e3*e.timeout))}function he(t,e,n,r){return u(e)&&(r=n,n=e,e={}),me({url:t,param:e,success:n,error:r})}function ge(t,e,n,r){return u(e)&&(r=n,n=e,e={}),me({url:t,type:"POST",param:e,success:n,error:r})}function ve(t,e,n){var r=t._eid||0;return 0===r&&o(t,"_eid",{value:r=++Qn,writable:!1,enumerable:!1,configurable:!0}),Yn[r]||(Yn[r]={}),Yn[r][e]||(Yn[r][e]=[]),F(Yn[r][e],n)||Yn[r][e].push(n),t}function ye(t,e,n){var r=t._eid||0;return r&&Yn[r]&&(Yn[r][e]?U(Yn[r][e],n).length&&n||delete Yn[r][e]:e||n||(delete t._eid,delete Yn[r])),t}function be(t,e,n){var r=!1,a=t._eid||0;return a&&Yn[a]&&(r=u(n)&&Yn[a][e]?F(Yn[a][e],n):Se(Yn[a][e])),!!r}function xe(t,e){var n=(c(e)?e._eid:0)||0;return n&&(o(t,"_eid",{value:++Qn,writable:!1,enumerable:!1,configurable:!0}),Yn[t._eid]=L(Yn[n])),t}function _e(t,e,n){var r=t._eid||0,n=n||[];r&&Yn[r]&&""!==e&&C(Yn[r][e],(function(t){t.apply(this,n)}),t)}function we(t,e,n){return R(E(e).split(","),(function(t){_e(this,Zt(t),n)}),t),t}function ke(t,e,n){var r,a,o=E(e||"").split(".");if(1===o.length)t.hasOwnProperty(e)&&(r=t[e]);else for(a=0,r=t;a<o.length&&!d(r=r[o[a]]);a++);if(n){var s=D(arguments,3);u(n)?r=n.apply(r,(s.unshift(r),s)):"string"==typeof n&&(r=u(r[n])?r[n].apply(r,s):r[n])}return r}function je(t,e,n){var r,a,o,s,i=(e||"").split(".");if(1===i.length)t[e]=n;else{for(o=0,r=t,a=i.pop();o<i.length;o++)r=null==(s=r[i[o]])?{}:s;r[a]=n}return t}function Ae(t,e){var n,r,a,o=(e||"").split(".");if(1===o.length)t.hasOwnProperty(e)&&delete t[e];else{for(r=0,n=t,a=o.pop();r<o.length;r++)n=n[o[r]];xn(n)?n.splice(S(a),1):delete n[a]}return t}function Ee(t,e){return S(e)>1?D(vt(t),0,S(e)):t[Nt(Se(t)-1)]}function Se(t){return u(t)||null==t||h(t)?0:"number"==typeof t.length?t.length:c(t)?V(t).length:0}function Ne(){return(new Date).getTime()}function Oe(t){var e=[];return m(t,"String")?t.split(""):(q(t,(function(t){e.push(t)})),e)}function Te(t,e){var n=[];return function(){for(var r,a=D(arguments),o=n.length;o--;)if(It(n[o][0],a))return r=n[o][1];return n.push([a,r=t.apply(e,a)]),r}}function Be(t,e){var n=m(t,"RegExp")?s(I,t):t;return u(n)?function(){return!n.apply(e,arguments)}:s(ot,n).bind(e)}function ze(){var t=D(arguments);return function(e){return t.reduce((function(t,e){return e(t)}),e)}}function De(t,e){if(c(t)&&!xn(t)&&"string"==typeof e){var n=ke(t,e);return n.sort.apply(n,D(arguments,2)),t}return xn(t)?t.sort.apply(t,D(arguments,1)):t}function Ve(t){var e=D(arguments,1);t&&tt(e).apply(null,e)}function Re(){R(z.apply(null,arguments),Object.freeze)}function Ce(){return new qe(arguments)}function qe(t){o(this,{"-":{value:0 in t?t:void 0,writable:!0,enumerable:!1,configurable:!1},"=":{value:[],writable:!1,enumerable:!1,configurable:!1}})}function Me(t){return tr[t]}function Le(){this._xhr=new er,r(this,nr)}function Ie(t){return or(unescape(encodeURIComponent(E(t))))}function Fe(t){return decodeURIComponent(escape(sr(E(t).replace(/\s/g,""))))}function Pe(t){switch((t||"").toLowerCase()){case"object":return c;case"array":return xn;case"arraylike":return f;case"function":case"fn":return u;case"nan":return h;case"prim":case"primitive":return d;case"idt":case"identifier":return p;case"define":return m;case"int":return g;case"float":case"double":return v;case"date":return y;case"empty":return b;case"dom":case"elm":case"element":return x;case"native":return _;default:return w}}function He(t){switch((t||"").toLowerCase()){case"str":case"string":return E;case"num":case"number":return S;case"arr":case"array":return T;case"hex":return O;case"rgb":return N;case"minus":return B;default:return E}}function Ue(t){switch((t||"").toLowerCase()){case"array":return R;case"object":return C;default:return q}}function Xe(t){return"key"===t?P:F}function Ze(t){switch((t||"").toLowerCase()){case"first":return W;case"last":return K;case"single":case"one":return Y;default:return $}}function Je(t){switch((t||"").toLowerCase()){case"key":return nt;case"hook":return ut;default:return et}}function Ge(t){return"fast"===t?it:ct}function $e(t){switch(t){case"un":case"re":return ft;default:return mt}}function Ke(t){switch((t||"").toLowerCase()){case"at":return gt;case"with":return kn;default:return ht}}function We(t){switch((t||"").toLowerCase()){case"left":return jt;case"right":return At;case"lefto":case"leftto":return Et;case"righto":case"rightto":return Et.bind(!0);default:return jt}}function Ye(){}function Qe(t){switch((t||"").toLowerCase()){case"int":return Nt;case"float":case"double":return Ot;case"string":return Dt;case"bool":case"boolean":return Tt;case"char":case"character":case"letter":return Bt;case"date":return Vt;case"hex":return zt;case"dice":return Rt;default:return Math.random}}function tn(t){switch((t||"").toLowerCase()){case"parse":return Ut;case"string":case"stringify":case"serialize":return Xt;case"query":case"requery":return Ft;default:return Ut}}function en(t){switch((t||"").toLowerCase()){case"encode":return ne;case"decode":return re;case"strip":return ae;case"zip":return oe;default:return ze(ae,oe)}}function nn(t){switch((t||"").toLowerCase()){case"trim":return Zt;case"trimleft":return Jt;case"trimright":return Gt;case"came":case"camelize":return $t;case"capit":case"capitalize":return Kt;case"collapse":return Wt;case"rize":case"rizewith":return Yt;default:return E}}function rn(t){switch((t||"").toLowerCase()){case"get":return he;case"post":return ge;case"jsonp":return fe;default:return me}}function an(t){switch((t||"").toLowerCase()){case"add":case"on":case"bind":return ve;case"remove":case"unbind":return ye;case"has":case"exist":return be;case"copy":case"extend":return xe;case"dispatch":case"trigger":case"emit":default:return we}}function on(t){switch((t||"").toLowerCase()){case"get":return ke;case"set":return je;case"not":case"remove":return Ae;default:return ke}}function sn(t){switch((t||"").toLowerCase()){case"atob":case"a2b":return sr;case"btoa":case"b2a":return or;case"utob":case"u2b":return Ie;case"btou":case"b2u":return Fe;default:return sr}}function cn(t){return ue.bind(m(t,"Object")?a($n,t):$n)}t.VERSION="1.0";var un={},ln=[],dn=ln.slice,pn=un.toString,mn="".trim,fn=ln.concat,hn=eval,gn=Object.freeze({}),vn=t(),yn=/^\[object .+?Constructor\]$/,bn=RegExp("^"+String(pn).replace(/[.*+?^${}()|[\]\/\\]/g,"\\$&").replace(/toString|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),xn=Array.isArray,_n=/^[a-z$_]+[a-z$_0-9]*$/i,wn=["array","function","null","undefined","arguments","boolean","string","number","date","regexp","nodeList","htmlcollection"],kn=U,jn="0123456789",An="abcdefghijklmnopqrstuvwxyz",En=An.toUpperCase(),Sn="~`!@#$%^&*(){}[]-+=_|/.,><:;",Nn=/[\t\r\n\f\x20]/g,On=/([^&=]+)=?([^&]*)/g,Tn="(.)^",Bn={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"$quot;","'":"&#x27;","`":"&#x60"},zn={"&amp;":"&","&gt;":">","&lt;":"<","&quot;":'"',"&#x27;":"'","&#x60;":"`"},Dn=/\\|'|\r|\n|\u2028|\u2029/g,Vn={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},Rn=/[&<">'](?:(amp|lt|quot|gt|#39);)?/g,Cn=/&((g|l|quo)t|amp|#39);/g,qn=/<script\b[^>]*>(.*?)<\/script>/gi,Mn=/<!--[\s\S]*?-->/gi,Ln=/[\t\r\n\f]/gim,In=/[A-Z]/g,Fn="[\\s\\x20\\xA0\\uFEFF]+",Pn=new RegExp(Fn,"g"),Hn=new RegExp("^"+Fn,"g"),Un=new RegExp(Fn+"$","g"),Xn=new RegExp(">"+Fn+"<","g"),Zn=new RegExp("<"+Fn,"g"),Jn=new RegExp(Fn+">","g"),Gn=new RegExp("</"+Fn,"g"),$n={escape:"{{-([\\s\\S]+?)}}",interpolate:"{{#([\\s\\S]+?)}}",command:"{{\\*([\\s\\S]+?)}}",evaluate:"{{([\\s\\S]+?)}}"},Kn=/^([\S]+)\s?([\s\S]+)?/,Wn=/[\[\]]*/g,Yn={},Qn=0;qe.prototype.value=function(){return ze.apply(null,this["="].splice(0,Se(this["="]))).apply(null,void 0===this["-"]?arguments:this["-"])};var tr={},er=vn.XMLHttpRequest,nr={readyState:0,response:{},responseText:null,responseType:null,responseURL:null,timeout:0,status:0};Le.prototype={abort:function(){return this._xhr.abort()},open:function(t,e){var n;return(n=Me(e))?r(this,{responseURL:e,responseType:"appliction/json",responseText:n,readyState:4,status:304}):this._xhr.open.apply(this._xhr,arguments)},send:function(t){return this.responseText&&this.readyState?(this.onreadystatechange(gn),r(this,nr)):this._xhr.send.apply(this._xhr,arguments)},start:function(){vn.XMLHttpRequest=Le},detect:function(t,e){tr[t]=E(e)},remove:function(t){return delete tr[t]},stop:function(){vn.XMLHttpRequest=er},addEventListener:j,setRequestHeader:j};var rr=new Le,ar="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",or=vn.btoa||function(t){for(var e,n,r=E(t),a="",o=0,s=ar;r.charAt(0|o)||(s="=",o%1);a+=s.charAt(63&e>>8-o%1*8)){if((n=r.charCodeAt(o+=.75))>255)throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");e=e<<8|n}return a},sr=vn.atob||function(t){var e=E(t).replace(/[=]+$/,""),n="";if(e.length%4==1)throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");for(var r,a,o=0,s=0,i=ar;a=e.charAt(s++);~a&&(r=o%4?64*r+a:a,o++%4)?n+=String.fromCharCode(255&r>>(-2*o&6)):0)a=i.indexOf(a);return n},ir={chain:Ce,define:o,extend:r,depextend:a,keys:V,noop:j,clone:M,depclone:L,not:U,cat:rt,slice:D,find:X,filter:X,reject:Z,every:J,some:G,diff:_t,intsec:wt,chunk:yt,compact:bt,pluck:lt,groupBy:dt,countBy:pt,concat:xt,cast:z,shuffle:vt,first:Q,last:tt,flat:St,merge:kt,auto:Ee,part:Mt,once:Lt,eq:It,cookie:de,values:Oe,memoize:Te,negate:Be,link:ze,size:Se,now:Ne,sort:De,exist:Ve,lock:Re,v8:k},cr={op:Ue,each:Ue,map:Je,has:Xe,type:Pe,html:en,unique:Ge,convert:He,pull:Ke,param:tn,ajax:rn,event:an,prop:on,drop:We,pairs:$e,index:Ze,random:Qe,string:nn,error:Ye,assembly:sn,doom:cn};return C(ir,(function(t,n){qe.prototype[n]=function(){return this["="].push(t),this},e.apply(null,arguments)})),C(cr,(function(t,e){qe.prototype[e]=function(){return this["="].push(t.apply(null,arguments)),this},n.apply(null,arguments)})),t.xhr=rr,t.root=vn,t.toString=E,t.broken=gn,t.prototype=t.__proto__=null,Object.freeze(k(t))})),(function(t,e,n){"function"==typeof define&&define.amd?define("aix",["struct"],(function(t){return n(e,t)})):"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(e,struct):t.aix=n(e,struct)})(this,{},(function(aix,struct){"use strict";function genertor_(t){aM.prototype[t]=function(){var e=this.data,n=[e].concat(_slice(arguments));return _eq(e=struct[t]().apply(e,n),this.data)||this.emit((this.data=e,t),n),this}}function genertor_$(t){aM.prototype[t]=function(){var e=[this.data].concat(_slice(arguments));return struct[t]().apply(this,e)}}function hackAix(t,e){var n=_toString(t),r=_toString(t),a=_toString(e),o=n.slice(n.indexOf("{")+1,n.lastIndexOf("}"));return r=r.slice(r.indexOf("(")+1,r.indexOf(")")).match(/([^\s,]+)/g)[0],a=a.slice(a.indexOf("(")+1,a.indexOf(")")).match(/([^\s,]+)/g)[0],[_toString(r),_toString(a),o]}function createExtend(origin){return function(def){var x=hackAix(aix[origin],aix[origin].extend),extend=eval("(function(ops){ var "+x[0]+"=_dpextend("+x[1]+",ops||{}); "+x[2]+"})");return _extend(extend.prototype,aix[origin].prototype),extend}}function zid(t){return t._zid||(t._zid=_zid++)}function findHandlers(t,e,n,r){if(e=parse(e),e.ns)var a=matcherFor(e.ns);return(handlers[zid(t)]||[]).filter((function(t){return t&&(!e.e||t.e==e.e)&&(!e.ns||a.test(t.ns))&&(!n||zid(t.fn)===zid(n))&&(!r||t.sel==r)}))}function parse(t){var e=(""+t).split(".");return{e:e[0],ns:e.slice(1).sort().join(" ")}}function matcherFor(t){return new RegExp("(?:^| )"+t.replace(" "," .* ?")+"(?: |$)")}function eventCapture(t,e){return t.del&&!focusinSupported&&t.e in focus||!!e}function capCursor(t){var e=0;if(null!=t.selectionStart)e=t.selectionStart;else if(document.selection){t.focus();var n=document.selection.createRange();n.moveStart("character",-t.value.length),e=n.text.length}return e}function setCursor(t,e){if(t.createTextRange){var n=t.createTextRange();n.move("character",e),n.select()}else t.selectionStart?t.setSelectionRange(e,e,t.focus()):t.focus()}function realEvent(t){return hover[t]||change[t]||focusinSupported&&focus[t]||t}function zaddEvent(t,e,n,r,a,o,s){var i=zid(t),c=handlers[i]||(handlers[i]=[]);_loop(e.split(/\s/),(function(e){var i=parse(e);i.fn=n,i.sel=a,i.e in hover&&(n=function(t){var e=t.relatedTarget;if(!e||e!==this&&!this.contains(e))return i.fn.apply(this,arguments)}),i.del=o;var u=o||n;i.proxy=function(e){var n,a=e.type,o=e.target.nodeName,s="true"===e.target.contentEditable;if(e=compatible(e),e.isImmediatePropagationStopped())return!1;e.data=r,"input"!==a&&"keypress"!==a&&"keyup"!==a||"INPUT"!==o&&"TEXTAREA"!==o&&!s||(n=capCursor(e.target));var i=u.apply(t,void 0===e._args?[e]:[e].concat(e._args));return!1===i&&(e.preventDefault(),e.stopPropagation()),n&&setCursor(e.target,n),i},i.i=c.length,c.push(i),t.addEventListener(realEvent(i.e),i.proxy,eventCapture(i,s))}))}function zremoveEvent(t,e,n,r,a){var o=zid(t);_loop((e||"").split(/\s/),(function(e){_loop(findHandlers(t,e,n,r),(function(e){delete handlers[o][e.i],t.removeEventListener(realEvent(e.e),e.proxy,eventCapture(e,a))}))}))}function returnTrue(){return!0}function returnFalse(){return!1}function compatible(t,e){if(e||!t.isDefaultPrevented){e||(e=t),_loop(eventMethods,(function(n,r){var a=e[r];t[r]=function(){return this[n]=returnTrue,a&&a.apply(e,arguments)},t[n]=returnFalse}));try{t.timeStamp||(t.timeStamp=Date.now())}catch(t){}
(void 0!==e.defaultPrevented?e.defaultPrevented:"returnValue"in e?!1===e.returnValue:e.getPreventDefault&&e.getPreventDefault())&&(t.isDefaultPrevented=returnTrue)}return t}function createProxy(t){var e,n={originalEvent:t};for(e in t)ignoreProperties.test(e)||void 0===t[e]||(n[e]=t[e]);return compatible(n,t)}function SubsetMapping(t,e){this.oldValue=t,this.newValue=e}function makeArray(t,e){return Array.apply(null,new Array(t)).map((function(){return e}))}function createDOM(t,e){var n,r=t.cloneNode();return supportTemplate?r.appendChild((n=document.createElement("template"),n.innerHTML=e,n.content)):r.innerHTML=e,r}function checkValidate(t,e,n){var r=[],a=_size(n);if(!a)return r;if(!_eq(t,e))for(var o,s,i=_keys(n),c=0;c<a;c++)if(o=n[i[c]],s=_prop(e,i[c]),!o(s)){r.push(i[c],s);break}return r}function on(t,e){return _isFn(e)&&_on(this,t,e),this}function uon(t,e){return this.on(e,t)}function unbind(t,e){return _unbind(this,t,e)}function emit(t,e){return _emit(this,t,e||[])}function moc(t,e){return _isAry(t)?t=t.concat(e):_isObj(t)?t=_extend(_clone(t),_isObj(e)?e:{}):"string"!=typeof t&&+e!==e||(t+=e),t}function setStore(t,e){localStorage.setItem("Ax@"+_utob(t),_utob(JSON.stringify(e)+"\r"))}function getStore(t){if(toString(t)){var e=_btou(localStorage.getItem("Ax@"+_utob(t)));return _size(e)>1?JSON.parse(e):""}}function pipe(t,e,n,r,a,o){var s,i,c={type:RESTFUL[_toString(t).toLowerCase()]||"GET",aysnc:!0},u=_isFn(n);return"string"==typeof e?(c.url=e,c.param=u?{}:n||{},s=u?n:r||_noop,i=u?r||_noop:a||_noop):_isObj(e)?(c.url=this.url||"/",c.param=u?e:n||{},s=u?n:r||_noop,i=u?r||_noop:a||_noop):(c.url=this.url||"/",s=_noop,i=_noop),c.header=o,c.success=function(e,n,r){s.call(this,e,n,r),this.emit(t+":success",[e,n,r])}.bind(this),c.fail=function(e,n){i.call(this,e,n),this.emit(t+":fail",[e,n])}.bind(this),this.emit(t,[_ajax(c),c])}function packRender(t,e,n){return n=_link(packBefore(t),packMain(t,e),packComplete(t)),function(){return n(arguments)}}function packBefore(t){return function(e){return t.emit("beforeRender",e),e}}function packMain(t,e){return function(n){return e.apply(t,n),n}}function packComplete(t){return function(e){return t.emit("completed",e),t}}function setRender(t,e){var n=packRender(t,e);return _define(t,"render",{get:function(){return n},set:function(e){return _isFn(e)&&(n=packRender(t,e)),n},enumerable:!0,configurable:!1}),t}function checkElm(t){if(!(t instanceof Element||_isAryL(t)))throw new TypeError("el must be typeof DOMElement or NodeList collections -> not "+t);return!0}function hashGet(t,e){var n=t.search("#"),r=t.search(e);return n>0?t.slice(n+1,~r?r:void 0):""}function hashParam(t,e){var n=t.search(e);return _param(~n?t.slice(n+1):void 0)}function hashChange(t,e,n){var r=hashGet(t,e),a=hashParam(t,e);_fol(this.routes,(function(t,e){new RegExp(e,"i").test(r)&&hashChangeReg.call(this,t,[a,r,n])}),this)}function hashChangeReg(t,e){_isFn(t)?t.apply(this,e):_fal("string"==typeof t?t.split(","):t,(function(t){this.actions[t].apply(this,e)}),this)}var z,Z,aM,aV,aR,VIEW_DEFAULT={},MODEL_DEFAULT={data:{},validate:{}},ROUTE_DEFAULT={char:"@",routes:{},actions:{}},RESTFUL={get:"GET",put:"POST",send:"GET",sync:"POST",post:"POST",fetch:"GET",update:"POST"},root=struct.root,v8=struct.v8(),_lock=struct.lock(),_keys=struct.keys(),_noop=struct.noop(),_define=struct.define(),_slice=struct.slice(),_clone=struct.clone(),_dpclone=struct.depclone(),_extend=struct.extend(),_dpextend=struct.depextend(),_eq=struct.eq(),_toString=struct.convert("string"),_type=struct.type(),_isObj=struct.type("object"),_isFn=struct.type("function"),_isInt=struct.type("int"),_isAry=struct.type("array"),_isAryL=struct.type("arraylike"),_isPrim=struct.type("primitive"),_loop=struct.op(),_fol=struct.op("object"),_fal=struct.op("array"),_ey=struct.every(),_on=struct.event("on"),_unbind=struct.event("unbind"),_emit=struct.event("emit"),_prop=struct.prop("get"),_setProp=struct.prop("set"),_rmProp=struct.prop("not"),_param=struct.param(),_paramStr=struct.param("string"),_trim=struct.string("trim"),_one=struct.index("one"),_has=struct.has(),_find=struct.find(),_ajax=struct.ajax(),_size=struct.size(),_first=struct.first(),_last=struct.last(),_link=struct.link(),_utob=struct.assembly("u2b"),_btou=struct.assembly("b2u"),_doom=struct.doom(),isId=/^#[^\s\=\+\.\#\[\]]+/i,isClass=/^\.[^\s\=\+\.\#\[\]]+$/i,isTag=/^[^\[\]\+\-\.#\s\=]+$/i,isAttr=/([^\s]+)?\[([^\s]+)=["']?([^\s'"]+)["']?\]$/i,mreSl=/^[^\s]+,[^\s]+/gi,cidSl=/[\s|\r]+/im,pitSl=/[>|\+|\~]+/im,isHTML=/<[a-zA-Z][\s\S]*>/;Z=function(t){this.el=_isAryL(t)?_slice(t):t instanceof Element?[t]:[]},z=function(t){return z.init.call(root,t)};var _zid=1,handlers={},focusinSupported="onfocusin"in window,focus={focus:"focusin",blur:"focusout"},hover={mouseenter:"mouseover",mouseleave:"mouseout"},change={change:"input",input:"input"},ignoreProperties=/^([A-Z]|returnValue$|layer[XY]$|webkitMovement[XY]$)/,eventMethods={preventDefault:"isDefaultPrevented",stopImmediatePropagation:"isImmediatePropagationStopped",stopPropagation:"isPropagationStopped"},matchzx=Element.prototype.matches||Element.prototype.webkitMatchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||function(t){return null!=this.parentNode&&this!==document&&_has(this.parentNode.querySelectorAll(t),this)};z.init=function(t){return new Z(t)},z.matchz=function(t,e){return!(null===t||t===document||"string"!=typeof e)&&matchzx.call(t,e)},z.event={add:zaddEvent,remove:zremoveEvent},z.proxy=function(t,e){var n=2 in arguments&&_slice(arguments,2);if(_isFn(t)){var r=function(){return t.apply(e,n?n.concat(_slice(arguments)):arguments)};return r._zid=zid(t),r}if("string"==typeof e)return n?z.proxy.apply(null,(n.unshift(t[e],t),n)):z.proxy(t[e],t);throw new TypeError("expected function")},z.Event=function(t,e){"string"!=typeof t&&(e=t,t=e.type);var n=document.createEvent(_has(capTypes.MouseEvent,t)?"MouseEvent":"Events"),r=!0;if(e)for(var a in e)"bubbles"===a?r=!!e[a]:n[a]=e[a];return n.initEvent(t,r,!0),compatible(n)};var diffcount,diffconst={addAttribute:0,modifyAttribute:1,removeAttribute:2,modifyTextElement:3,relocateGroup:4,removeElement:5,addElement:6,removeTextElement:7,addTextElement:8,replaceElement:9,modifyValue:10,modifyChecked:11,modifySelected:12,modifyComment:13,action:"a",route:"r",oldValue:"o",newValue:"n",element:"e",group:"g",from:"f",to:"t",name:"na",value:"v",data:"d",attributes:"at",nodeName:"nn",childNodes:"c",checked:"ch",selected:"s"},Diff=function(t){_extend(this,t||{})};Diff.prototype={toString:function(){return JSON.stringify(this)},setValue:function(t,e){return this[t]=e,this}},SubsetMapping.prototype={contains:function(t){return t.length<this.length&&t.newValue>=this.newValue&&t.newValue<this.newValue+this.length},toString:function(){return this.length+" element subset, first mapping: old "+this.oldValue+" → new "+this.newValue}};var elementDescriptors=function(t){var e=[];return"#text"!==t.nodeName&&"#comment"!==t.nodeName&&(e.push(t.nodeName),t.attributes&&(t.attributes.class&&e.push(t.nodeName+"."+t.attributes.class.replace(/ /g,".")),t.attributes.id&&e.push(t.nodeName+"#"+t.attributes.id))),e},findUniqueDescriptors=function(t){var e={},n={};return _fal(t,(function(t){_fal(elementDescriptors(t),(function(t){var r=t in e,a=t in n;r||a?r&&(n[t]=delete e[t]):e[t]=!0}))})),e},uniqueInBoth=function(t,e){var n=findUniqueDescriptors(t),r=findUniqueDescriptors(e),a={};return _fal(_keys(n),(function(t){r[t]&&(a[t]=!0)})),a},removeDone=function(t){return delete t.outerDone,delete t.innerDone,delete t.valueDone,!t.childNodes||_ey(t.childNodes,removeDone)},isEqual=function(t,e){if(!_ey(["nodeName","value","checked","selected","data"],(function(n){return t[n]===e[n]})))return!1;if(Boolean(t.attributes)!==Boolean(e.attributes)||Boolean(t.childNodes)!==Boolean(e.childNodes))return!1;if(t.attributes){var n,r;if(n=_keys(t.attributes),r=_keys(e.attributes),n.length!==r.length)return!1;if(!_ey(n,(function(n){return t.attributes[n]===e.attributes[n]})))return!1}if(t.childNodes){if(t.childNodes.length!==e.childNodes.length)return!1;if(!_ey(t.childNodes,(function(t,n){return isEqual(t,e.childNodes[n])})))return!1}return!0},roughlyEqual=function(t,e,n,r,a){var o,s,i;if(!t||!e||t.nodeName!==e.nodeName)return!1;if("#text"===t.nodeName)return!!a||t.data===e.data;if(t.nodeName in n)return!0;if(t.attributes&&e.attributes){if(t.attributes.id&&t.attributes.id===e.attributes.id&&t.nodeName+"#"+t.attributes.id in n)return!0;if(t.attributes.class&&t.attributes.class===e.attributes.class&&t.nodeName+"."+t.attributes.class.replace(/ /g,".")in n)return!0}return!!r||(s=t.childNodes?t.childNodes.slice().reverse():[],i=e.childNodes?e.childNodes.slice().reverse():[],s.length===i.length&&(a?_ey(s,(function(t,e){return t.nodeName===i[e].nodeName})):(o=uniqueInBoth(s,i),_ey(s,(function(t,e){return roughlyEqual(t,i[e],o,!0,!0)})))))},findCommonSubsets=function(t,e,n,r){var a,o,s=0,i=[],c=Array.apply(null,new Array(t.length+1)).map((function(){return[]})),u=uniqueInBoth(t,e),l=t.length===e.length;return l&&t.some((function(t,n){var r=elementDescriptors(t),a=elementDescriptors(e[n]);return r.length!==a.length?!(l=!1):(r.some((function(t,e){if(t!==a[e])return!(l=!1)})),!l)})),_fal(t,(function(t,a){_fal(e,(function(e,o){n[a]||r[o]||!roughlyEqual(t,e,u,l)?c[a+1][o+1]=0:(c[a+1][o+1]=c[a][o]?c[a][o]+1:1,c[a+1][o+1]>=s&&(s=c[a+1][o+1],i=[a+1,o+1]))}))})),0!==s&&(a=[i[0]-s,i[1]-s],o=new SubsetMapping(a[0],a[1]),o.length=s,o)},getGapInformation=function(t,e,n){var r=t.childNodes?makeArray(t.childNodes.length,!0):[],a=e.childNodes?makeArray(e.childNodes.length,!0):[],o=0;return _fal(n,(function(t){var e,n=t.oldValue+t.length,s=t.newValue+t.length;for(e=t.oldValue;e<n;e++)r[e]=o;for(e=t.newValue;e<s;e++)a[e]=o;o++})),{gaps1:r,gaps2:a}},markSubTrees=function(t,e){for(var n=t.childNodes?t.childNodes:[],r=e.childNodes?e.childNodes:[],a=makeArray(n.length,!1),o=makeArray(r.length,!1),s=[],i=!0,c=function(t,e){return e},u=function(t){a[i.oldValue+t]=!0,o[i.newValue+t]=!0};i;)(i=findCommonSubsets(n,r,a,o))&&_fal((s.push(i),Array.apply(null,new Array(i.length)).map(c)),u);return s},DiffTracker=function(){this.list=[]};DiffTracker.prototype={list:!1,add:function(t){return _fal(t,(function(t){this.push(t)}),this.list)},forEach:function(t){_fal(this.list,t)}};var diffDOM=function(t){_extend(this,_extend({debug:!1,diffcap:10,maxDepth:!1,valueDiffing:!0,textDiff:function(){arguments[0].data=arguments[3]},preVirtualDiffApply:function(){},postVirtualDiffApply:function(){},preDiffApply:function(){},postDiffApply:function(){},filterOuterDiff:null},t||{})),this._const=Object.freeze(_clone(diffconst))};diffDOM.Diff=Diff,diffDOM.prototype={diff:function(t,e){var n=this.nodeToObj(t),r=this.nodeToObj(e);return diffcount=0,this.debug&&(this.t1Orig=this.nodeToObj(t),this.t2Orig=this.nodeToObj(e)),this.tracker=new DiffTracker,this.findDiffs(n,r)},findDiffs:function(t,e){var n;do{n=this.findNextDiff(t,e,[]),0===n.length&&(isEqual(t,e)||(removeDone(t),n=this.findNextDiff(t,e,[]))),n.length>0&&this.applyVirtual(t,this.tracker.add(n))}while(n.length>0);return this.tracker.list},findNextDiff:function(t,e,n){var r,a;if(this.maxDepth&&n.length>this.maxDepth)return[];if(!t.outerDone){if(r=this.findOuterDiff(t,e,n),this.filterOuterDiff&&(a=this.filterOuterDiff(t,e,r))&&(r=a),r.length>0)return t.outerDone=!0,r;t.outerDone=!0}if(!t.innerDone){if(r=this.findInnerDiff(t,e,n),r.length>0)return r;t.innerDone=!0}if(this.valueDiffing&&!t.valueDone){if(r=this.findValueDiff(t,e,n),r.length>0)return t.valueDone=!0,r;t.valueDone=!0}return[]},findOuterDiff:function(t,e,n){var r,a,o=this,s=[];return t.nodeName!==e.nodeName?[(new Diff).setValue(o._const.action,o._const.replaceElement).setValue(o._const.oldValue,t).setValue(o._const.newValue,e).setValue(o._const.route,n)]:t.data!==e.data?"#text"===t.nodeName?[(new Diff).setValue(o._const.action,o._const.modifyTextElement).setValue(o._const.route,n).setValue(o._const.oldValue,t.data).setValue(o._const.newValue,e.data)]:[(new Diff).setValue(o._const.action,o._const.modifyComment).setValue(o._const.route,n).setValue(o._const.oldValue,t.data).setValue(o._const.newValue,e.data)]:(r=t.attributes?_keys(t.attributes).sort():[],a=e.attributes?_keys(e.attributes).sort():[],_fal(r,(function(r){var i=a.indexOf(r);-1===i?s.push((new Diff).setValue(o._const.action,o._const.removeAttribute).setValue(o._const.route,n).setValue(o._const.name,r).setValue(o._const.value,t.attributes[r])):(a.splice(i,1),t.attributes[r]!==e.attributes[r]&&s.push((new Diff).setValue(o._const.action,o._const.modifyAttribute).setValue(o._const.route,n).setValue(o._const.name,r).setValue(o._const.oldValue,t.attributes[r]).setValue(o._const.newValue,e.attributes[r])))})),_fal(a,(function(t){s.push((new Diff).setValue(o._const.action,o._const.addAttribute).setValue(o._const.route,n).setValue(o._const.name,t).setValue(o._const.value,e.attributes[t]))})),s)},nodeToObj:function(t){var e={};return e.nodeName=t.nodeName,"#text"===e.nodeName||"#comment"===e.nodeName?e.data=t.data:(t.attributes&&t.attributes.length>0&&(e.attributes={},_fal(Array.prototype.slice.call(t.attributes),(function(t){e.attributes[t.name]=t.value}))),t.childNodes&&t.childNodes.length>0&&(e.childNodes=[],_fal(Array.prototype.slice.call(t.childNodes),(function(t){e.childNodes.push(this.nodeToObj(t))}),this)),this.valueDiffing&&(void 0!==t.value&&(e.value=t.value),void 0!==t.checked&&(e.checked=t.checked),void 0!==t.selected&&(e.selected=t.selected))),e},objToNode:function(t,e){var n;return"#text"===t.nodeName?n=document.createTextNode(t.data):"#comment"===t.nodeName?n=document.createComment(t.data):("svg"===t.nodeName||e?(n=document.createElementNS("http://www.w3.org/2000/svg",t.nodeName),e=!0):n=document.createElement(t.nodeName),t.attributes&&_fal(_keys(t.attributes),(function(e){n.setAttribute(e,t.attributes[e])})),t.childNodes&&_fal(t.childNodes,(function(t){n.appendChild(this.objToNode(t,e))}),this),this.valueDiffing&&(t.value&&(n.value=t.value),t.checked&&(n.checked=t.checked),t.selected&&(n.selected=t.selected))),n},findInnerDiff:function(t,e,n){var r,a,o,s,i,c=this,u=t.childNodes&&e.childNodes?markSubTrees(t,e):[],l=t.childNodes?t.childNodes:[],d=e.childNodes?e.childNodes:[],p=[],m=0;if(u.length>0&&(p=this.attemptGroupRelocation(t,e,u,n),p.length>0))return p;for(a=Math.max(l.length,d.length),l.length!==d.length&&(r=!0),i=0;i<a;i+=1)o=l[i],s=d[i],r&&(o&&!s?"#text"===o.nodeName?(p.push((new Diff).setValue(c._const.action,c._const.removeTextElement).setValue(c._const.route,n.concat(m)).setValue(c._const.value,o.data)),m-=1):(p.push((new Diff).setValue(c._const.action,c._const.removeElement).setValue(c._const.route,n.concat(m)).setValue(c._const.element,o)),m-=1):s&&!o&&("#text"===s.nodeName?p.push((new Diff).setValue(c._const.action,c._const.addTextElement).setValue(c._const.route,n.concat(m)).setValue(c._const.value,s.data)):p.push((new Diff).setValue(c._const.action,c._const.addElement).setValue(c._const.route,n.concat(m)).setValue(c._const.element,s)))),o&&s&&(p=p.concat(this.findNextDiff(o,s,n.concat(m)))),m++;return t.innerDone=!0,p},attemptGroupRelocation:function(t,e,n,r){var a,o,s,i,c,u,l,d,p,m=this,f=getGapInformation(t,e,n),h=f.gaps1,g=f.gaps2,v=Math.min(h.length,g.length),y=[];for(d=0,l=0;d<v;l+=1,d+=1)if(!0===h[d])if(i=t.childNodes[l],"#text"===i.nodeName){if("#text"===e.childNodes[d].nodeName&&i.data!==e.childNodes[d].data){for(u=l;t.childNodes.length>u+1&&"#text"===t.childNodes[u+1].nodeName;)if(u+=1,e.childNodes[d].data===t.childNodes[u].data){c=!0;break}if(!c)return y.push((new Diff).setValue(m._const.action,m._const.modifyTextElement).setValue(m._const.route,r.concat(d)).setValue(m._const.oldValue,i.data).setValue(m._const.newValue,e.childNodes[d].data)),y}y.push((new Diff).setValue(m._const.action,m._const.removeTextElement).setValue(m._const.route,r.concat(d)).setValue(m._const.value,i.data)),h.splice(d,1),v=Math.min(h.length,g.length),d-=1}else y.push((new Diff).setValue(m._const.action,m._const.removeElement).setValue(m._const.route,r.concat(d)).setValue(m._const.element,i)),h.splice(d,1),v=Math.min(h.length,g.length),d--;else if(!0===g[d])i=e.childNodes[d],"#text"===i.nodeName?(y.push((new Diff).setValue(m._const.action,m._const.addTextElement).setValue(m._const.route,r.concat(d)).setValue(m._const.value,i.data)),h.splice(d,0,!0),v=Math.min(h.length,g.length),l--):(y.push((new Diff).setValue(m._const.action,m._const.addElement).setValue(m._const.route,r.concat(d)).setValue(m._const.element,i)),h.splice(d,0,!0),v=Math.min(h.length,g.length),l--);else if(h[d]!==g[d]){if(y.length>0)return y;if(s=n[h[d]],(o=Math.min(s.newValue,t.childNodes.length-s.length))!==s.oldValue){for(a=!1,p=0;p<s.length;p+=1)roughlyEqual(t.childNodes[o+p],t.childNodes[s.oldValue+p],[],!1,!0)||(a=!0);if(a)return[(new Diff).setValue(m._const.action,m._const.relocateGroup).setValue("groupLength",s.length).setValue(m._const.from,s.oldValue).setValue(m._const.to,o).setValue(m._const.route,r)]}}return y},findValueDiff:function(t,e,n){var r=[],a=this;return t.selected!==e.selected&&r.push((new Diff).setValue(a._const.action,a._const.modifySelected).setValue(a._const.oldValue,t.selected).setValue(a._const.newValue,e.selected).setValue(a._const.route,n)),(t.value||e.value)&&t.value!==e.value&&"OPTION"!==t.nodeName&&r.push((new Diff).setValue(a._const.action,a._const.modifyValue).setValue(a._const.oldValue,t.value).setValue(a._const.newValue,e.value).setValue(a._const.route,n)),t.checked!==e.checked&&r.push((new Diff).setValue(a._const.action,a._const.modifyChecked).setValue(a._const.oldValue,t.checked).setValue(a._const.newValue,e.checked).setValue(a._const.route,n)),r},applyVirtual:function(t,e){return _fal(e,(function(e){this.applyVirtualDiff(t,e)}),this),!0},getFromVirtualRoute:function(t,e){var n,r,a=t;for(e=e.slice();e.length>0;){if(!a.childNodes)return!1;r=e.splice(0,1)[0],n=a,a=a.childNodes[r]}return{node:a,parentNode:n,nodeIndex:r}},applyVirtualDiff:function(t,e){var n,r,a,o=this.getFromVirtualRoute(t,e[this._const.route]),s=o.node,i=o.parentNode,c=o.nodeIndex,u=this,l={diff:e,node:s};if(this.preVirtualDiffApply(l))return!0;switch(e[this._const.action]){case this._const.addAttribute:s.attributes||(s.attributes={}),s.attributes[e[this._const.name]]=e[this._const.value],"checked"===e[this._const.name]?s.checked=!0:"selected"===e[this._const.name]?s.selected=!0:"INPUT"===s.nodeName&&"value"===e[this._const.name]&&(s.value=e[this._const.value]);break;case this._const.modifyAttribute:s.attributes[e[this._const.name]]=e[this._const.newValue],"INPUT"===s.nodeName&&"value"===e[this._const.name]&&(s.value=e[this._const.value]);break;case this._const.removeAttribute:delete s.attributes[e[this._const.name]],0===_keys(s.attributes).length&&delete s.attributes,"checked"===e[this._const.name]?s.checked=!1:"selected"===e[this._const.name]?delete s.selected:"INPUT"===s.nodeName&&"value"===e[this._const.name]&&delete s.value;break;case this._const.modifyTextElement:s.data=e[this._const.newValue],"TEXTAREA"===i.nodeName&&(i.value=e[this._const.newValue]);break;case this._const.modifyValue:s.value=e[this._const.newValue];break;case this._const.modifyComment:s.data=e[this._const.newValue];break;case this._const.modifyChecked:s.checked=e[this._const.newValue];break;case this._const.modifySelected:s.selected=e[this._const.newValue];break;case this._const.replaceElement:n=e[this._const.newValue],n.outerDone=!0,n.innerDone=!0,n.valueDone=!0,i.childNodes[c]=n;break;case this._const.relocateGroup:_fal(s.childNodes.splice(e[this._const.from],e.groupLength).reverse(),(function(t){s.childNodes.splice(e[u._const.to],0,t)}));break;case this._const.removeElement:i.childNodes.splice(c,1);break;case this._const.addElement:r=e[this._const.route].slice(),a=r.splice(r.length-1,1)[0],s=this.getFromVirtualRoute(t,r).node,n=e[this._const.element],n.outerDone=!0,n.innerDone=!0,n.valueDone=!0,s.childNodes||(s.childNodes=[]),a>=s.childNodes.length?s.childNodes.push(n):s.childNodes.splice(a,0,n);break;case this._const.removeTextElement:i.childNodes.splice(c,1),"TEXTAREA"===i.nodeName&&delete i.value;break;case this._const.addTextElement:r=e[this._const.route].slice(),a=r.splice(r.length-1,1)[0],n={},n.nodeName="#text",n.data=e[this._const.value],s=this.getFromVirtualRoute(t,r).node,s.childNodes||(s.childNodes=[]),a>=s.childNodes.length?s.childNodes.push(n):s.childNodes.splice(a,0,n),"TEXTAREA"===s.nodeName&&(s.value=e[this._const.newValue]);break;default:console.log("unknown action")}l.newNode=n,this.postVirtualDiffApply(l)},apply:function(t,e){return _fal(e,(function(e){this.applyDiff(t,e)}),this),!0},getFromRoute:function(t,e){e=e.slice();for(var n=t;e.length>0;){if(!n.childNodes)return!1;n=n.childNodes[e.splice(0,1)[0]]}return n},applyDiff:function(t,e){var n,r,a,o,s=this.getFromRoute(t,e[this._const.route]),i=this,c={diff:e,node:s};if(this.preDiffApply(c))return!0;switch(e[this._const.action]){case this._const.addAttribute:if(!s||!s.setAttribute)return!1;s.setAttribute(e[this._const.name],e[this._const.value]);break;case this._const.modifyAttribute:if(!s||!s.setAttribute)return!1;s.setAttribute(e[this._const.name],e[this._const.newValue]);break;case this._const.removeAttribute:if(!s||!s.removeAttribute)return!1;s.removeAttribute(e[this._const.name]);break;case this._const.modifyTextElement:if(!s||3!==s.nodeType)return!1;this.textDiff(s,s.data,e[this._const.oldValue],e[this._const.newValue]);break;case this._const.modifyValue:if(!s||void 0===s.value)return!1;s.value=e[this._const.newValue];break;case this._const.modifyComment:if(!s||void 0===s.data)return!1;this.textDiff(s,s.data,e[this._const.oldValue],e[this._const.newValue]);break;case this._const.modifyChecked:if(!s||void 0===s.checked)return!1;s.checked=e[this._const.newValue];break;case this._const.modifySelected:if(!s||void 0===s.selected)return!1;s.selected=e[this._const.newValue];break;case this._const.replaceElement:s.parentNode.replaceChild(this.objToNode(e[this._const.newValue],"http://www.w3.org/2000/svg"===s.namespaceURI),s);break;case this._const.relocateGroup:_fal(Array.apply(null,new Array(e.groupLength)).map((function(){return s.removeChild(s.childNodes[e[i._const.from]])})),(function(t,n){0===n&&(r=s.childNodes[e[i._const.to]]),s.insertBefore(t,r)}));break;case this._const.removeElement:s.parentNode.removeChild(s);break;case this._const.addElement:a=e[this._const.route].slice(),o=a.splice(a.length-1,1)[0],s=this.getFromRoute(t,a),s.insertBefore(this.objToNode(e[this._const.element],"http://www.w3.org/2000/svg"===s.namespaceURI),s.childNodes[o]);break;case this._const.removeTextElement:if(!s||3!==s.nodeType)return!1;s.parentNode.removeChild(s);break;case this._const.addTextElement:if(a=e[this._const.route].slice(),o=a.splice(a.length-1,1)[0],n=document.createTextNode(e[this._const.value]),!(s=this.getFromRoute(t,a))||!s.childNodes)return!1;s.insertBefore(n,s.childNodes[o]);break;default:console.log("unknown action")}return c.newNode=n,this.postDiffApply(c),!0}};var _DIFF=new diffDOM({diffcap:998}),supportTemplate="content"in document.createElement("template"),capEvents=["blur","invalid","focusin","focusout","focus","abort","afterprint","beforeprint","checking","downloading","load","unload","loadend","loadstart","mouseenter","mouseleave","resize","show","select"],capTypes={UIEvent:["focus","blur","focusin","focusout"],MouseEvent:["click","dbclick","mouseup","mousedown","mouseout","mouseover","mouseenter","mouseleave"],KeyboardEvent:["keydown","keypress","keyup"]};return Z.prototype={get:function(t){return 0 in arguments?this.el[+t+(t<0?this.length:0)]:this.el},each:function(t,e){return _fal(this.el,t,e||this),this},find:function(t){var e=[];return _fal(this.el,(function(n){e=_slice(n.querySelectorAll(t)).concat(e)})),z(e)},closest:function(t,e){for(var n,r=this.el,a=this.get(0),o=0,s=r.length;o<s;o++,a=r[o]){for(;a&&!n&&a!==e;)z.matchz(a=a.parentNode,t)&&(n=a);if(n)break}return z(n||[])},on:function(t,e,n,r,a){var o,s,i=this;return t&&"string"!=typeof t?(_loop(t,(function(t,r){i.on(r,e,n,t,a)})),i):("string"==typeof e||_isFn(r)||!1===r||(r=n,n=e,e=void 0),void 0!==r&&!1!==n||(r=n,n=void 0),!1===r&&(r=returnFalse),i.each((function(i){a&&(o=function(t){return zremoveEvent(i,t.type,r),r.apply(this,arguments)}),e&&(s=function(t){var n,a=z.matchz(t.target,e)?t.target:z(t.target).closest(e,i).get(0);if(a&&a!==i)return n=_extend(createProxy(t),{currentTarget:a,liveFired:i}),(o||r).apply(a,[n].concat(_slice(arguments,1)))}),zaddEvent(i,t,r,n,e,s||o)})))},off:function(t,e,n){return t&&"string"!=typeof t?(_loop(t,(function(t,n){this.off(n,e,t)}),this),this):("string"==typeof e||_isFn(n)||!1===n||(n=e,e=void 0),!1===n&&(n=returnFalse),this.each((function(r){zremoveEvent(r,t,n,e)})))},trigger:function(t,e){return t="string"==typeof t?z.Event(t):compatible(t),t._args=e,this.each((function(n){t.type in focus&&_isFn(n[t.type])?n[t.type]():"dispatchEvent"in n?n.dispatchEvent(t):z(n).triggerHandler(t,e)}))},triggerHandler:function(t,e){var n,r;return this.each((function(a){n=createProxy("string"==typeof t?z.Event(t):t),n._args=e,n.target=a,_loop(findHandlers(a,t.type||t),(function(t){if(r=t.proxy(n),n.isImmediatePropagationStopped())return!1}))})),r},html:function(t){return this.each((function(e){e.innerHTML=t}))},render:function(t){return this.each((function(e){this.apply(e,this.diff(e,createDOM(e,1===t.nodeType?t.outerHTML:_toString(t))))}),_DIFF)}},aix.model=aM=function(t){var e=_extend(_clone(MODEL_DEFAULT),t||{}),n=e.events,r=e.validate,a=!0===e.store&&toString(e.url),o=a?getStore(e.url)||e.data:e.data;delete e.data,delete e.store,delete e.change,delete e.events,delete e.validate,_define(this,"data",{get:function(){return _clone(o)},set:function(t){if(_eq(o,t))return o;var e,n=[_clone(t)];return this.emit("validate",n),(_isPrim(t)?_isFn(r)&&!r(t):(e=checkValidate(o,t,r),_size(e)))?(this.emit("validate:fail",n.concat(e)),_isAry(e)&&2===_size(e)&&this.emit("validate:fail:"+_first(e),[_last(e)]),o):(o=t,this.change=!0,a&&setStore(this.url,t),this.emit("validate:success,change",n),t)},enumerable:!0,configurable:!1}),_fol(n,uon,this),_extend(this,e).emit("init",[this.data]).unbind("init")},aM.prototype={get:function(t){return null!=t&&""!==t?_prop.apply(this,[this.data].concat(_slice(arguments))):!0===t?_dpclone(this.data):this.data},set:function(){var t;return this.data=arguments.length>1?(t=arguments[0],_setProp(this.data,t,arguments[1])):arguments[0],t?this.emit("change:"+t.split(".").shift()+",change:"+t,[arguments[1]]):this},rm:function(t){var e=null;return t?(e=this.data,this.data=_isAry(e)?(e.splice(+t,1),e):_rmProp(e,t)):this.data=e,t?this.emit("change:"+t.split(".").shift()+",change:"+t):this},moc:function(t,e){return this.set(t,moc(_prop(this.data,t),e))},on:on,emit:emit,unbind:unbind,toJSON:function(){return _isPrim(this.data)?this.data:JSON.stringify(this.data)},send:function(t,e){return _isObj(t)&&(e=t,t=null),pipe.apply(this,["send",t||this.url,this.data,_noop,_noop,e])},fetch:function(t,e,n){return _isFn(t)&&(n=e,e=t,t={}),pipe.apply(this,["fetch",this.url,t,_link(_isFn(e)?e:JSON.parse,this.set.bind(this)),_noop,n])},sync:function(t,e){return _isObj(t)&&(e=t,t=null),pipe.apply(this,["sync",t||this.url,this.data,_noop,_noop,e])},toString:function(){return this.data}},aix.view=aV=function(t){var e=_extend(_clone(VIEW_DEFAULT),t||{}),n=e.root,r=e.render,a=e.events,o=e.template,s=e.props;delete e.root,delete e.mount,delete e.props,delete e.events,delete e.render,delete e.template,_isFn(r)||(o="string"==typeof o?_doom(o,_isObj(s)?s:{}):_isFn(o)?o:_noop,r=function(){var t=z(n),e=_slice(arguments);return o!==_noop&&(""===_trim(t.get(0).innerHTML)?t.html(o.apply(this,e)):t.render(o.apply(this,e)))}),n&&checkElm(n)?(this.root=n,_fol(a,uon,setRender(this,r))):this.mount=function(t){if(checkElm(t))return this.root=n=t,_fol(a,uon,setRender(this,r)),1 in arguments&&this.render.apply(this,_slice(arguments,1)),delete this.mount,this},_extend(this,e).emit("init").unbind("init")},aV.prototype={on:function(t,e){return _fal((t||"").split(","),(function(t){var n=t.split(":");n.length>1?z(this.root).on(n[0],n[1],{self:this},e):_on(this,t,e)}),this),this},unbind:function(t,e){return _fal((t||"").split(","),(function(t){var n=t.split(":");n.length>1?z(this.root).off(n[0],n[1],e):_unbind(this,t,e)}),this),this},emit:function(t,e){var n=(t||"").split(":");return n.length>2?(_fal((t||"").split(","),(function(t){var n=t.split(":");z(this.root).find(n[1]).trigger(n[0],e)}),this),this):n.length>1?(z(this.root).find(n[1]).trigger(n[0],e),this):_emit(this,t,e)},toString:function(){return this.root}},aix.route=aR=function(t){var e=this,n={old:"",now:root.location.href},r=_extend(_clone(ROUTE_DEFAULT),t||{}),a=r.events;delete r.history,delete r.events,_define(this,"event",{value:function(t){return root.location.href===n.now?t.preventDefault():(n.old=n.now,e.emit("hashchange",[n.now=root.location.href,r.char,t]))},writable:!1,enumerable:!1,configurable:!1}),_fol(a,uon,this),_extend(this,r).on("hashchange",hashChange).emit("init").unbind("init")},aR.prototype={on:on,emit:emit,unbind:unbind,listen:function(t,e){return this._listen?this:(_define(this,"_listen",{value:!root.addEventListener("hashchange",this.event),writable:!1,enumerable:!1,configurable:!0}),t?this.assign(t,e):this.emit("hashchange",[root.location.href,this.char]))},stop:function(){return delete this._listen&&root.removeEventListener("hashchange",this.event),this},assign:function(t,e){if(this._listen){var n=root.location.href,r=n.search("#");r>0&&(n=n.slice(0,r)),root.location.href=n+("#"===t.toString().slice(0,1)?"":"#")+t+(_isObj(e)?(this.char||"@")+_paramStr(e):"")}return this},toString:function(){return this}},_fal(["extend","not","cat","find","filter","reject","chunk","compact","pluck","groupBy","countBy","pairs","shuffle","flat","merge","map","sort","unique","concat"],genertor_),_fal(["keys","diff","intsec","first","last","auto","eq","values","size","each","has","type","index"],genertor_$),aix.VERSION=struct.VERSION,aV.extend=createExtend("view"),aM.extend=createExtend("model"),aR.extend=createExtend("route"),_lock(aM,aV,aR,v8(aix)),aix})),define("data/rulelist",[],(function(){return Object.freeze({api:["model:get","model:set","model:rm","model:moc","model:toJSON","model:parse","model:send","model:fetch","model:sync","model:store","model:validate","model:events","model:extend","view:events","view:mount","view:props","view:render","view:extend","route:listen","route:stop","route:assign","route:events","route:extend","struct:define","struct:extend","struct:depextend","struct:keys","struct:noop","struct:clone","struct:depclone","struct:not","struct:cat","struct:slice","struct:find","struct:filter","struct:reject","struct:every","struct:some","struct:diff","struct:intsec","struct:chunk","struct:compact","struct:pluck","struct:groupBy","struct:countBy","struct:concat","struct:cast","struct:shuffle","struct:first","struct:last","struct:flat","struct:merge","struct:auto","struct:part","struct:once","struct:eq","struct:values","struct:memoize","struct:negate","struct:link","struct:size","struct:now","struct:sort","struct:each","struct:map","struct:has","struct:type","struct:html","struct:unique","struct:convert","struct:pull","struct:drop","struct:param","struct:ajax","struct:event","struct:prop","struct:pairs","struct:index","struct:random","struct:string","struct:assembly","struct:doom"]})})),define("actions/introduce/model",["aix"],(function(t,e){return new t.model({data:{main:"Aix",cap1:"Modules",cap2:"Examples",cap3:"Info",copy:"Copyright © 2016-2017 Cloud YiJun"}})})),define("modules/tags",["struct"],(function(t){"use strict";var e=t.slice(),n=t.op("array"),r={},a=document.getElementById("tags"),o=function(t,e){var n=document.createElement("a");return n.href="javascript:;",n.innerHTML=t.innerText||t.textContent,n.setAttribute("class",e?"t-child":"t-out"),n.onclick=function(){t.scrollIntoView(!0)},n};return r.make=function(){a.innerHTML="",n(e(document.querySelectorAll("[t]")),(function(t){a.appendChild(o(t)),
n(e(document.querySelectorAll("[tc='"+ +t.getAttribute("t")+"']")),(function(t){a.appendChild(o(t,!0))}))}))},r})),define("text",["module"],(function(t){"use strict";function e(t,e){return void 0===t||""===t?e:t}function n(t,n,r,a){if(n===a)return!0;if(t===r){if("http"===t)return e(n,"80")===e(a,"80");if("https"===t)return e(n,"443")===e(a,"443")}return!1}var r,a,o,s,i,c=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],u="undefined"!=typeof location&&location.href,l=u&&location.protocol&&location.protocol.replace(/\:/,""),d=u&&location.hostname,p=u&&(location.port||void 0),m={},f=t.config&&t.config()||{};return r={version:"2.0.15",strip:function(t){if(t){t=t.replace(/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,"");var e=t.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);e&&(t=e[1])}else t="";return t},jsEscape:function(t){return t.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")},createXhr:f.createXhr||function(){var t,e,n;if("undefined"!=typeof XMLHttpRequest)return new XMLHttpRequest;if("undefined"!=typeof ActiveXObject)for(e=0;e<3;e+=1){n=c[e];try{t=new ActiveXObject(n)}catch(t){}if(t){c=[n];break}}return t},parseName:function(t){var e,n,r,a=!1,o=t.lastIndexOf("."),s=0===t.indexOf("./")||0===t.indexOf("../");return-1!==o&&(!s||o>1)?(e=t.substring(0,o),n=t.substring(o+1)):e=t,r=n||e,o=r.indexOf("!"),-1!==o&&(a="strip"===r.substring(o+1),r=r.substring(0,o),n?n=r:e=r),{moduleName:e,ext:n,strip:a}},xdRegExp:/^((\w+)\:)?\/\/([^\/\\]+)/,useXhr:function(t,e,a,o){var s,i,c,u=r.xdRegExp.exec(t);return!u||(s=u[2],i=u[3],i=i.split(":"),c=i[1],i=i[0],(!s||s===e)&&(!i||i.toLowerCase()===a.toLowerCase())&&(!c&&!i||n(s,c,e,o)))},finishLoad:function(t,e,n,a){n=e?r.strip(n):n,f.isBuild&&(m[t]=n),a(n)},load:function(t,e,n,a){if(a&&a.isBuild&&!a.inlineText)return void n();f.isBuild=a&&a.isBuild;var o=r.parseName(t),s=o.moduleName+(o.ext?"."+o.ext:""),i=e.toUrl(s),c=f.useXhr||r.useXhr;return 0===i.indexOf("empty:")?void n():void(!u||c(i,l,d,p)?r.get(i,(function(e){r.finishLoad(t,o.strip,e,n)}),(function(t){n.error&&n.error(t)})):e([s],(function(t){r.finishLoad(o.moduleName+"."+o.ext,o.strip,t,n)})))},write:function(t,e,n,a){if(m.hasOwnProperty(e)){var o=r.jsEscape(m[e]);n.asModule(t+"!"+e,"define(function () { return '"+o+"';});\n")}},writeFile:function(t,e,n,a,o){var s=r.parseName(e),i=s.ext?"."+s.ext:"",c=s.moduleName+i,u=n.toUrl(s.moduleName+i)+".js";r.load(c,n,(function(e){var n=function(t){return a(u,t)};n.asModule=function(t,e){return a.asModule(t,u,e)},r.write(t,c,n,o)}),o)}},"node"===f.env||!f.env&&"undefined"!=typeof process&&process.versions&&process.versions.node&&!process.versions["node-webkit"]&&!process.versions["atom-shell"]?(a=require.nodeRequire("fs"),r.get=function(t,e,n){try{var r=a.readFileSync(t,"utf8");"\ufeff"===r[0]&&(r=r.substring(1)),e(r)}catch(t){n&&n(t)}}):"xhr"===f.env||!f.env&&r.createXhr()?r.get=function(t,e,n,a){var o,s=r.createXhr();if(s.open("GET",t,!0),a)for(o in a)a.hasOwnProperty(o)&&s.setRequestHeader(o.toLowerCase(),a[o]);f.onXhr&&f.onXhr(s,t),s.onreadystatechange=function(r){var a,o;4===s.readyState&&(a=s.status||0,a>399&&a<600?(o=new Error(t+" HTTP status: "+a),o.xhr=s,n&&n(o)):e(s.responseText),f.onXhrComplete&&f.onXhrComplete(s,t))},s.send(null)}:"rhino"===f.env||!f.env&&"undefined"!=typeof Packages&&"undefined"!=typeof java?r.get=function(t,e){var n,r,a=new java.io.File(t),o=java.lang.System.getProperty("line.separator"),s=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(a),"utf-8")),i="";try{for(n=new java.lang.StringBuffer,r=s.readLine(),r&&r.length()&&65279===r.charAt(0)&&(r=r.substring(1)),null!==r&&n.append(r);null!==(r=s.readLine());)n.append(o),n.append(r);i=String(n.toString())}finally{s.close()}e(i)}:("xpconnect"===f.env||!f.env&&"undefined"!=typeof Components&&Components.classes&&Components.interfaces)&&(o=Components.classes,s=Components.interfaces,Components.utils.import("resource://gre/modules/FileUtils.jsm"),i="@mozilla.org/windows-registry-key;1"in o,r.get=function(t,e){var n,r,a,c={};i&&(t=t.replace(/\//g,"\\")),a=new FileUtils.File(t);try{n=o["@mozilla.org/network/file-input-stream;1"].createInstance(s.nsIFileInputStream),n.init(a,1,0,!1),r=o["@mozilla.org/intl/converter-input-stream;1"].createInstance(s.nsIConverterInputStream),r.init(n,"utf-8",n.available(),s.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER),r.readString(n.available(),c),r.close(),n.close(),e(c.value)}catch(t){throw new Error((a&&a.path||"")+": "+t)}}),r})),define("text!actions/introduce/tpl",[],(function(){return'<article class="introduce">\n\t<header>\n\t\t<h3 t=1 style="color:#8a3838">\n\t\t\t<i class="ion-ios-navigate"></i>\n\t\t\t{{#main}}\n\t\t</h3>\n\t\t<p><b><i class="ion-ios-navigate"></i> Aix</b> is a fast MVR JavaScript Framework.</p>\n\n\t\t<p>It require <b>Struct</b> utils lib, for the sake of better organization application structure with modular architecture<b>( AMD or CommonJS specification )</b>. This is not to replace <b>Backbone</b> or <b>Angular</b> etc, maybe it boring form of entertainment. Of course, it cooperate with <b>React</b> very well.</p>\n\t\t<br>\n\t\t\n\t\t<p><b><i class="ion-android-apps"></i> Struct</b> pass over <b>300 test case by Qunit</b> , and <b>Aix</b> call build with <b>Saucelabs</b>:</p>\n\t\t<br>\n\t\t<p style="min-height:125px"><img style="display:block; width:100%; max-with:100%; overflow:hidden; zoom:1" src="app/styles/imgs/testing.png" alt="Aix Test by Saucelabs"></p>\n\t\t<br>\n\n\t\t<br>\n\n\t\t<div class="it-download">\n\t\t<mark style="margin-bottom:20px"><i class="ion-erlenmeyer-flask"></i>&nbsp; Latest version - {{#struct.VERSION}}</mark>\n\t\t<p>\n\t\t\t<span>Pack with <code>struct</code></span>\n\t\t\t<a href="./aixs.min.js" title="download it" alt="download it" rel="download" download=\'aixs.min.js\'>\n\t\t\t\t<i class="ion-android-checkmark-circle" style="vertical-align:-1px"></i>\n\t\t\t\taixs.min.js (1.0) (57k)\n\t\t\t</a>\n\t\t</p>\n\t\t<p style="margin-bottom:0">The compress file with <b>GZIP</b> only <b>19KB</b> </p>\n\t\t</div>\n\t\t\n\t\t<br>\n\t\t<p>\n\t\t\t<span class="it-outlink">\n\t\t\t\t<a href="https://github.com/DemonCloud/aix" target="_blank"><i class="ion-social-github"></i> Encourage a Star</a> \n\t\t\t</span> \n\t\t\t<span class="it-outlink">\n\t\t\t\t<a href="test" target="_blank"><i class="ion-ios-analytics"></i> See Unit test</a> \n\t\t\t</span>\n\t\t\t<span class="it-outlink">\n\t\t\t\t<a href="examples" target="_blank"><i class="ion-social-nodejs"></i> More Examples</a> \n\t\t\t</span>\n\t\t</p>\n\n\t</header>\n\n\t<div class="it-block">\n\t\t<h3 class="target" t=2>{{#cap1}}</h3>\n\t\t<ul class="it-cap">\n\t\t\t<li>\n\t\t\t\t<a href="javascript:;" tc=2>\n\t\t\t\t\t<i class="ion-gear-a"></i> \n\t\t\t\t\t<b> Struct</b>\n\t\t\t\t</a>\n\t\t\t\t<span> - Struct is basic utils in aix, Salute to K&amp;R <b>&lt;The C Programming Language&gt;</b>. It contains more than 100 practical function, also it can be used as a single tool. focus on functional programming, the limits of performance, and the function of packaging more easily</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<a href="javascript:;" tc=2>\n\t\t\t\t\t<i class="ion-ios-pie"></i> \n\t\t\t\t\t<b> Model</b>\n\t\t\t\t</a>\n\t\t\t\t<span> - Allows you to easily manage the data , model parse is the Immutable data, who can be monitored. So that data would not be modified by accident. Flexible authentication mechanism, to ensure the availability of data.</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<a href="javascript:;" tc=2>\n\t\t\t\t\t<i class="ion-ionic"></i> \n\t\t\t\t\t<b> View</b>\n\t\t\t\t</a>\n\t\t\t\t<span> - The simple view is one of the essential of the app, it provides a flexible way to build the user interface, or use it as container for other view\'s lib (framework). it was given the complete events emitter and virtual DOM rendering mechanism by default way.</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<a href="javascript:;" tc=2>\n\t\t\t\t\t<i class="ion-social-buffer"></i> \n\t\t\t\t\t<b> Route</b>\n\t\t\t\t</a>\n\t\t\t\t<span> - A routing manager for application, support regular expressions to match the router with multiple actions. Detection of hash change and carry any parameters at the same time.</span>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\n\t<div class="it-block">\n\t\t<h3 t=3>{{#cap2}}</h3>\n\t\t\x3c!-- example1 --\x3e\n\t\t<div class="it-example-info" tc=3>\n\t\t\tBase\n\t\t</div>\n\t\t<div class="it-example">\n\t\t\t<div class="ite-code">\n\t\t\t\t<pre class="sh_javascript">\nvar view = new aix.view({\n\ttemplate:"&lt;div class=\'name\'&gt;"+\n\t\t\t\t\t\t\t"Hello &#123;&#123;-name&#125;&#125;"+\n\t\t\t\t\t "&lt;/div&gt;"\n});\n\nview.mount(\n\tdocument.getElementById("mount1"),\n\t{ name : "Buke" }\n);\n\t\t\t\t</pre>\n\t\t\t</div>\n\t\t\t<div class="ite-preview">\n\t\t\t\t<div class="ite-mount" id="mount1"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t\x3c!-- example1 end --\x3e\n\t\t\x3c!-- example2 --\x3e\n\t\t<div class="it-example-info" tc=3>\n\t\t\tTwo-way Data Binding\n\t\t</div>\n\t\t<div class="it-example">\n\t\t\t<div class="ite-code">\n\t\t\t\t<pre class="sh_javascript">\nvar view = new aix.view({\n\ttemplate:"&lt;input value=\'&#123;&#123;-text&#125;&#125;\'&gt;"+\n\t\t\t\t\t "&lt;h2&gt;&#123;&#123;-text&#125;&#125;&lt;/h2&gt;",\n\tevents:{\n\t\t"change:input":function(){\n\t\t\t model.set("text",this.value);\n\t\t}\n\t}\n});\n\nvar model = new aix.model({\n\tevents:{\n\t\tchange:function(){\n\t\t\tview.render(this.get());\n\t\t}\n\t}\n});\n\nview.mount(\n\tdocument.getElementById("mount2"),\n\t{ text: "Hello World" }\n);\n\t\t\t\t</pre>\n\t\t\t</div>\n\t\t\t<div class="ite-preview">\n\t\t\t\t<div class="ite-mount" id="mount2"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t\x3c!-- example2 end --\x3e\n\t\t\x3c!-- example3 --\x3e\n\t\t<div class="it-example-info" tc=3>\n\t\t\tTodo List\n\t\t</div>\n\t\t<div class="it-example">\n\t\t\t<div class="ite-code">\n\t\t\t\t<pre class="sh_javascript">\nvar trim = struct.string("trim");\n\nvar view = new aix.view({\n\ttemplate:\'&lt;input id="name" maxlength=10&gt;\'+\n\t\t\'&lt;button id="add"&gt;add&lt;/button&gt;\'+\n\t\t\'&lt;ul&gt;\'+\n\t\t\'&#123;&#123;* each [item,i] in list &#125;&#125;\'+\n\t\t\t\'&lt;li&gt;&#123;&#123;-cap(item.name)&#125;&#125;\'+\n\t\t\t\'&lt;b class="del" key=&#123;&#123;-i&#125;&#125;&gt;×&lt;/b&gt;&lt;/li&gt;\'+\n\t\t\'&#123;&#123;* end &#125;&#125;\'+\n\t\t\'&lt;/ul&gt;\',\n\tprops:{\n\t\tcap: struct.string("capit")\n\t},\n\tevents:{\n\t\t"click:#add":function(){\n\t\t\tvar getName = trim(\n\t\t\t\tdocument.getElementById("name").value\n\t\t\t);\n\t\t\tif(getName)\n\t\t\t\tmodel.moc("list",{ name : getName });\n\t\t},\n\t\t"click:.del":function(event){\n\t\t\tmodel.rm(\n\t\t\t\t"list."+this.getAttribute("key")\n\t\t\t);\n\t\t},\n\t\t"keypress:#name":function(event){\n\t\t\t// keypress [ Enter ] trigger add action\n\t\t\tif(event.keyCode === 13)\n\t\t\t\tevent.data.self.emit("click:#add");\n\t\t}\n\t}\n});\n\nvar model = new aix.model({\n\tdata:{\n\t\tlist:[]\n\t},\n\tevents:{\n\t\tchange:function(){\n\t\t\tview.render(this.data);\n\t\t}\n\t}\n});\n\nview.mount(\n\tdocument.getElementById("mount3"),\n\tmodel.get()\n);\n\t\t\t\t</pre>\n\t\t\t</div>\n\t\t\t<div class="ite-preview">\n\t\t\t\t<div class="ite-mount" id="mount3"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t\x3c!-- example3 end --\x3e\n\t</div>\n\n\t<div class="it-block">\n\t\t<h3 t=4>{{#cap3}}</h3>\n\t\t<p>These examples were simple described the behavior of <b>Aix</b> and way of writing. u can get more example in here <a target="_blank" href="examples">More Examples</a>. Flexible and simple way of assembly is main design objective for Aix .</p>\n\t</div>\n\n\t<footer>\n\t\t{{#copy}}\n\t</footer>\n</article>\n\n\n'})),define("actions/introduce/view",["aix","modules/tags","text!actions/introduce/tpl"],(function(t,e,n){return new t.view({root:document.getElementById("app"),template:n,events:{beforeRender:function(t){console.log("#introduce randering")},completed:function(n){sh_highlightDocument(e.make()),new t.view({template:"<div class='name'>Hello {{-name}}</div>"}).mount(document.getElementById("mount1"),{name:"Buke"});var r=new t.view({template:"<input value='{{-text}}' style='margin-bottom:5px'><h2>{{-text}}</h2>",events:{"change:input":function(t){a.set("text",this.value)}}}),a=new t.model({events:{change:function(){r.render(this.get())}}});r.mount(document.getElementById("mount2"),{text:"Hello World"});var o=struct.string("trim"),s=new t.view({template:'<input id="name" maxlength=10><button id="add">add</button><ul>{{* each [item,i] in list }} \t <li style="max-width:168px">    {{-cap(item.name)}}    <b class="del" key={{-i}}>×</b> \t </li>{{* end }}</ul>',props:{cap:struct.string("capit")},events:{"click:#add":function(t){var e=o(document.getElementById("name").value);e&&i.moc("list",{name:e})},"keypress:#name":function(t){13===t.keyCode&&t.data.self.emit("click:#add")},"click:.del":function(t){i.rm("list."+this.getAttribute("key"))}}}),i=new t.model({data:{list:[]},events:{"change:list":function(){s.render(this.get())}}});s.mount(document.getElementById("mount3"),i.get())}}})})),define("actions/introduce/export",["actions/introduce/model","actions/introduce/view"],(function(t,e){return function(n){n&&(window.scrollTo(0,0),e.render(t.get()))}})),define("data/apidata",[],(function(){return Object.freeze({"model:get":{title:"Model.get",introduce:"<code>model.get</code> it is mainly used to get the data form model with <code>key</code>, it provides a more secure and reliable mechanism. alse u can give a <code>todo</code> function to dispose get-value, that not suggest to use <code>model.data</code> direactly, because assist model.data is just return its copy. ",usages:["model.get()","model.get(key)","model.get(key,todo(value,...$args),...$args)"],params:[{name:"key",type:"String,Number"},{name:"todo",type:"Function"}],info:"<p><code>todo</code> function would not change <code>model.data</code></p><p>u can binding more <code>...args</code> for <code>todo</code> </p>",related:[{name:"model.set",target:"model:set"},{name:"model.rm",target:"model:rm"}],examples:[{title:"Basic usage",code:"var m = new aix.model({\n\tdata:{\n\t\tb : 1\n\t}\n});\n// get data \nconsole.log(m.get());"},{title:"Get with key",code:'var m = new aix.model({\n\tdata:{\n\t\ta : 1,\n\t\tb : { c : 2 }\n\t}\n});\n// get data \nconsole.log(m.get("b.c"));'},{title:"Dowith property method",code:'var m = new aix.model({\n\tdata:{\n\t\tb : "abcd",\n\t\ta : [2,3,4]\n\t}\n});\n// get data \nconsole.log(m.get("b","length"));\nconsole.log(m.get("a","toString"));'},{title:"Dowith function",code:'var size = struct.size();\nvar m = new aix.model({\n\tdata:{\n\t\ta : { b:1, c:2, d:{ e:3, f:4 } }\n\t}\n});\n// get data \nconsole.log(m.get("a.d",size));\nconsole.log(m.get("a.d",JSON.stringify));'}]},"model:set":{title:"Model.set",introduce:"<code>model.set</code> it is mainly used to update the data of the model, <code>aix.model</code> data is <b>immutable</b>, it provides a more secure and reliable mechanism. so change the model.data.* direactly may not work.",usages:["model.set(data)","model.set(key,data)"],params:[{name:"key",type:"String,Number"},{name:"data",type:"Auto"}],info:"<p>set will be auto validate if defined <code>validate</code> property on defaults</p><p>set sucessful will trigger <code>change</code> events</p>",related:[{name:"model.get",target:"model:get"},{name:"model.rm",target:"model:rm"},{name:"model.moc",target:"model:moc"}],examples:[{title:"Basic usage",code:"var m = new aix.model(); \n// set the data \nm.set({ a:1 }); \nconsole.log(m.data);"},{title:"Use key",code:'var m = new aix.model();\n// set the data\nm.set("a",1);\nconsole.log(m.data);'},{title:"Change deeping target",code:'var m = new aix.model({\n\tdata : {\n\t\ta : {\n\t\t\tb : 1,\n\t\t\tc : {\n\t\t\t\td : 3\n\t\t\t}\n\t\t}\n\t}\n});\n\n// set the data\nm.set("a.b",10);\nm.set("a.c.d",5);\nconsole.log(m.toJSON());'},{title:"Set with Validate",code:'var m = new aix.model({\n\t// validate the property "a" isString\n\tvalidate:{\n\t\ta : function(a){\n\t\t\treturn typeof a === "string";\n\t\t}\n\t},\n\t// if pass validate\n\tevents:{\n\t\tchange : function(){\n\t\t\tconsole.log("set sucessful!");\n\t\t}\n\t}\n});\n\n// set as number\nm.set("a",1);\nconsole.log(m.data);\n\n// set as array\nm.set("a",[]);\nconsole.log(m.data);\n\n// set as string\nm.set("a","Buke");\nconsole.log(m.data);'}]},"model:rm":{title:"Model.rm",introduce:"<code>model.rm</code> use to remove data in model",usages:["model.rm()","model.rm(key)"],params:[{name:"key",type:"String,Number"}],info:"<p>care about <code>rm</code> method, if the key target not exist, the code would not throw a error, but deal it silence</p><p>direactly use <code>model.rm</code> will set <code>model.data</code> as <code>null</code>",related:[{name:"model.get",target:"model:get"},{name:"model.set",target:"model:set"}],examples:[{title:"Basic usage",code:'var m = new aix.model({\n\tdata:{\n\t\ta : 1,\n\t\tb : 2\n\t}\n});\n// remove data\nm.rm("a");\nconsole.log(m.get());'},{title:"Remove directly",code:"var m = new aix.model({\n\tdata:{\n\t\ta : 1\n\t}\n});\n// remove data\nm.rm();\nconsole.log(m.get());"}]},"model:moc":{title:"Model.moc",introduce:"<code>model.moc</code> is useful update <code>Object</code> , <code>Array</code> target in model",usages:["model.moc(key,val)"],params:[{name:"key",type:"String,Number"},{name:"val",type:"Auto"}],info:"<p>In some case, use <code>model.data[somekey]=somevalue</code> method is invalid, <code>model.moc</code> given a simple way to update model at somewhere.</p><p>it will auto emit an <code>change</code> events</p>",examples:[{title:"Basic usage",code:'var m = new aix.model({\n\tdata:{\n\t\ta : []\n\t}\n});\n// moc the data\nm.moc("a",[2,1,3])\nconsole.log(m.get());'},{title:"Update Object",code:'var m = new aix.model({\n\tdata:{\n\t\ta : { b:1 }\n\t}\n});\n// moc the data\nm.moc("a",{b:2, c:3})\nconsole.log(m.get());'}]},"model:toJSON":{title:"Model.toJSON",introduce:"<code>model.toJSON</code>, convert the model data to JSON string",usages:["model.toJSON()"],info:"<p>sure you model is JSON format, <a href='https://en.wikipedia.org/wiki/JSON' target='_blank'>see more about JSON</a></p>",examples:[{title:"Basic usage",code:"var m = new aix.model({\n\tdata:{\n\t\ta : 1,\n\t\tb : {\n\t\t\tc : 2,\n\t\t\td : 3\n\t\t},\n\t\te : {\n\t\t\tf: [1,2]\n\t\t}\n\t}\n});\n// convert data to JSON string format\nconsole.log(m.toJSON());"}]},"model:send":{title:"Model.send",introduce:'<code>model.send</code> send model data to server with "GET" method, auto convert data to querystring, this action be sure the data is typeof <code>Object</code> ',usages:["model.send()","model.send(header)","model.send(url,header)"],params:[{name:"url",type:"String"},{name:"header",type:"Object"}],info:"<p>it will trigger the <code>send</code> events</p>\n\t\t\t\t\t\t<p><code>send:success</code> or <code>send:fail</code>, or with callback, also u can custom [ HTTP header ] to server</p>",related:[{name:"model.fetch",target:"model:fetch"},{name:"model.sync",target:"model:sync"}],examples:[{title:"Basic usage",code:'var m = new aix.model({\n\turl:"ajax/action",\n\tdata:{\n\t\tid : 1002,\n\t\tname : "buke",\n\t\tscore : 99\n\t}\n});\n// send data \nconsole.log(m.send());\n// send to custom url \nconsole.log(m.send("ajax/other"));'},{title:"With custom HTTP header",code:'var m = new aix.model({\n\turl:"ajax/data1",\n\tdata:{\n\t\tid : 213\n\t}\n});\n// send data with custom HTTP header \nm.send({\n\tMyCustom : "Buke"\n});'}]},"model:fetch":{title:"Model.fetch",introduce:'<code>model.fetch</code>, fetch the data form server(model\'s url) with "GET" method, auto update as <code>JSON</code> format by default, change <code>model.data</code> with emitter events',usages:["model.fetch()","model.fetch(param)","model.fetch(by,header)","model.fetch(param,by,header)"],params:[{name:"param",type:"Object"},{name:"by",type:"Function"},{name:"header",type:"Object"}],info:"<p>u can fetch data with queryString when u set <code>param</code> arg, it will trigger the <code>fetch</code> events:</p>\n\t\t\t\t\t\t<p><code>fetch:success</code> or <code>fetch:fail</code></p>\n\t\t\t\t\t\t<p>the arg - <code>by</code> is use to processing data format, must return a data for set</p>",related:[{name:"model.send",target:"model:send"},{name:"model.sync",target:"model:sync"}],examples:[{title:"Basic usage",code:'var m = new aix.model({\n\turl:"ajax/data2",\n\tevents:{\n\t\t"fetch:success":function(){\n\t\t\tconsole.log(this.get());\n\t\t}\n\t}\n});\n// fetch data\nm.fetch();'},{title:"Fetch byFilter",code:'var m = new aix.model({\n\turl:"ajax/data2",\n\tevents:{\n\t\t"fetch:success":function(){\n\t\t\tconsole.log(this.get());\n\t\t}\n\t}\n});\n// filter the data\nm.fetch(function(res){\n\treturn { json: res };\n});'}]},"model:sync":{title:"Model.sync",introduce:'<code>model.sync</code> use "POST" method to sync the data to Server',usages:["model.sync()","model.sync(header)","model.sync(url,header)"],params:[{name:"url",type:"String"},{name:"header",type:"Object"}],info:"<p>sync with only single param <code>header</code>, use to set [ HTTP Header ]</p>",related:[{name:"model.send",target:"model:send"},{name:"model.fetch",target:"model:fetch"}],examples:[{title:"Basic usage",code:'var m = new aix.model({\n\turl:"ajax/data3",\n\tdata:{\n\t\ta:1,\n\t\tb:"abc"\n\t}\n});\n// sync data to server\nm.sync();'},{title:"Sync with HTTP Header",code:'var m = new aix.model({\n\turl:"ajax/data3",\n\tdata:{\n\t\ta:1\n\t}\n});\n// sync data to server\nm.sync({\n\tSeeConsole : "Here"\n});'}]},"model:store":{title:"Model [ Store ]",introduce:"<code>model</code> provides a mechanism for data persistence can be stored locally",usages:["store:(Boolean)"],params:[{name:"store",type:"Boolean"}],info:"<p><code>store</code> property should define with <code>url</code> at the same time, otherwise the storage will not take effect!</p><p>Persistent storage data can be shared by multiple models at the same time, as long as they define the <b>same</b> <code>url</code>.</p><p>store data will be synced when the model <b>changed</b></p>",related:[{name:"model.set",target:"model:set"},{name:"model.moc",target:"model:moc"},{name:"model.fetch",target:"model:fetch"}],examples:[{title:"Basic usage",code:'var size = struct.size();\nvar m = new aix.model({\n\turl:"myCustom",\n\tstore:true,\n});\n// store data at locally\nif(size(m.data)){\n\tconsole.log("store data: " + m.toJSON());\n}else{\n\tm.set({ a:1, b:2, c:3, d:4 });\n\tconsole.log("refresh this page and rerun the code example");\n}'}]},"model:validate":{title:"Model [ Validate ]",introduce:"<code>model</code> provides a mechanism checker for setting up the data, (this checker will not apply to initialize) before <code>model.change</code>.",usages:["validate:(Object)"],params:[{name:"validate",type:"Object"}],info:"<p><code>validate</code> should be defined at <code>model</code> initialize, if u set <code>model.validate</code>, it would not be any sense.</p><p><code>validate</code> function should return boolean type for checker</p>",related:[{name:"model.set",target:"model:set"},{name:"model.moc",target:"model:moc"},{name:"model.fetch",target:"model:fetch"}],examples:[{title:"Basic usage",code:'var m = new aix.model({\n\tvalidate:{\n\t\ta : function(value){\n\t\t\treturn typeof value === "number";\n\t\t}\n\t},\n\tevents:{\n\t\t"validate:success":function(){\n\t\t\tconsole.log("validate success!",this.get());\n\t\t},\n\t\t"validate:fail":function(){\n\t\t\tconsole.log("validate fail!",this.get());\n\t\t}\n\t}\n});\n// try to change the data\nm.set("a","1");\nm.set("a",6);'},{title:"Deeping checking",code:'var m = new aix.model({\n\tvalidate:{\n\t\t"a.b" : function(value){\n\t\t\treturn typeof value === "string";\n\t\t}\n\t},\n\tevents:{\n\t\t"validate:success":function(){\n\t\t\tconsole.log("validate success!",this.get());\n\t\t},\n\t\t"validate:fail":function(){\n\t\t\tconsole.log("validate fail!",this.get());\n\t\t}\n\t}\n});\n// try to change the data\nm.set("a",["b","c"]);\nm.set("a",{});\nm.set("a",{ b : 6 });\nm.set("a",{ b : "7" });'},{title:"Error handling",code:'var m = new aix.model({\n\tvalidate:{\n\t\t"a.b" : function(value){\n\t\t\treturn typeof value === "string";\n\t\t},\n\t\t"a.c" : function(value){\n\t\t\treturn +value === value;\n\t\t}\n\t},\n\tevents:{\n\t\t"validate:fail":function(set,key,value){\n\t\t\tconsole.log(\n\t\t\t\t"set Property ["+key+"] with " + \n\t\t\t\t"("+value+") not pass validate"\n\t\t\t);\n\t\t}\n\t}\n});\n// try to change the data\nm.set("a",["b","c"]);\nm.set("a",{ b:6, c:2 });\nm.set("a",{ b:"7", c:"2" })\nconsole.log("see the model\'s data -> ",m.get());'}]},"model:events":{title:"Model [ Events ]",introduce:"<code>model.events</code> extend to <code>struct</code> event-dispatching thread, give the events to Object, the events can be easy to extend, there is no performance loss",usages:["model.on(type,fn)","model.emit(type,args)","model.unbind(type,fn)"],params:[{name:"type",type:"String"},{name:"fn",type:"Function"},{name:"args",type:"Array"}],info:'<p>if not enter <code>fn</code> args, the <code>model.unbind</code>, would remove events of <code>type</code>,</p><p>if not <code>type</code> param, it will remove all the events for this model.</p> <p>model has some basic events , see this table: </p> <h2 tc=4>Built-in events</h2>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Event Name</th>\n\t\t\t<th>Event Info</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>init</td>\n\t\t\t<td>when model create, it will trigger <b>once time</b></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>change</td>\n\t\t\t<td>when model.data has been changed</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>validate</td>\n\t\t\t<td>begin to validate the set-data ( model not change )</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>validate:success</td>\n\t\t\t<td>set-data pass validate ( same as "change" )</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>validate:fail</td>\n\t\t\t<td>set-data fail to pass validate</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>send</td>\n\t\t\t<td>begin to send model.data to server</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>send:success</td>\n\t\t\t<td>get 200 success or 304 HTTP code</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>send:fail</td>\n\t\t\t<td>send fail to server</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>fetch</td>\n\t\t\t<td>begin to fetch the data form server</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>fetch:success</td>\n\t\t\t<td>get 200 success or 304 HTTP code ( data should pass validate )</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>fetch:fail</td>\n\t\t\t<td>fetch fail to server</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>sync</td>\n\t\t\t<td>sync the data to server</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>sync:success</td>\n\t\t\t<td>get 200 success or 304 HTTP code ( save the data in server )</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>sync:fail</td>\n\t\t\t<td>sync data fail to server</td>\n\t\t</tr>\n\t</tbody>\n</table>\n',examples:[{title:"Basic usage",code:'var m = new aix.model();\n// bind change event\nm.on("change",function(){\n\tconsole.log("data has been changed!",this);\n});\nm.set("a",1);'},{title:"Multiple events",code:'var m = new aix.model({\n\tevents:{\n\t\t// define at model initialize\n\t\tchange:function(){\n\t\t\tconsole.log("My Events 0");\n\t\t}\n\t}\n});\n// bind change event\nm.on("change",function(){\n\tconsole.log("My Events 1");\n});\nm.on("change",function(){\n\tconsole.log("My Events 2");\n});\nm.on("change",function(){\n\tconsole.log("My Events 3",this);\n});\n// trigger change\nm.set({ a:1 });'},{title:"Proactive trigger",code:'var m = new aix.model({\n\tevents:{\n\t\tcustom:function(a,b){\n\t\t\tconsole.log("see the total "+(a+b));\n\t\t}\n\t}\n});\n// Proactive emit with params\nm.emit("custom",[2,3]);'},{title:"Remove event",code:'var m = new aix.model({\n\tevents:{\n\t\tchange:function(){\n\t\t\tconsole.log("change event 1");\n\t\t}\n\t}\n});\n\nm.on("change",function(){\n\tconsole.log("change event 2");\n})\n// remove events\nm.unbind("change");\n\n// see emit\nconsole.log(m.set({ a:1,b:2 }));'}]},"model:extend":{title:"Model [ Extend ]",introduce:"<code>model.extend</code>,it provides a way of object-oriented programming",usages:["new aix.model.extend(defaultOption)"],params:[{name:"defaultOption",type:"Object"}],examples:[{title:"Basic usage",code:'var m = new aix.model.extend({\n\tdata:{\n\t\ta : 2\n\t},\n\tevents:{\n\t\tchange: function(){\n\t\t\tconsole.log("data changed!",this.get());\n\t\t}\n\t}\n});\n\n// new m constructor\nvar n = new m();\nn.set({ a:1, b:2 });'},{title:"Override default option",code:'var m = new aix.model.extend({\n\tdata:{\n\t\ta : "abc"\n\t}\n});\n\n// new m constructor\nvar n = new m({\n\tdata:{\n\t\ta : "213"\n\t},\n\tvalidate:{\n\t\ta : function(val){\n\t\t\treturn typeof val === "string";\n\t\t}\n\t},\n\tevents:{\n\t\t"validate:fail":function(data,key,val){\n\t\t\tconsole.log(\n\t\t\t\t"can\'t set ["+key+"] as ("+ val +")"\n\t\t\t);\n\t\t}\n\t}\n});\n\nn.set({ a:1, b:2 });\nconsole.log(n.get());'}]},"view:mount":{title:"View [ mount ]",introduce:"<code>mount</code> is once-time function to initialize view ( if not set <code>root</code> property )",usages:["view.mount(elm)","view.mount(elm,initdata)"],params:[{name:"elm",type:"DOMElement,DOMHTMLCollection"},{name:"initdata",type:"Object"}],info:"<p>if <code>view</code> not define <code>root</code> property, the view will not create <code>render</code> function</p> <p>just create <code>mount</code> once-time function, call <code>mount</code> then create <code>render</code> method</p>",related:[{name:"view.render",target:"view:render"}],examples:[{title:"Basic usage",preview:"base",code:'var v = new aix.view({\n\ttemplate:"&lt;span&gt;Hello &#123;&#123;-text&#125;&#125;&lt;/span&gt;",\n\tevents:{\n\t\t"click:span":function(){\n\t\t\talert(this.innerHTML);\n\t\t}\n\t}\n});\n// mount to elm\nv.mount(\n\tdocument.getElementById("base"),\n\t{ text : "Mary" }\n)'}]},"view:render":{title:"View [ render ]",introduce:"<code>render</code> function create at view initialize ( if set <code>root</code> property )",usages:["view.render(...args)"],params:[{name:"...args",type:"AnyType"}],info:"<p>create render function must define <code>root</code> property at initialize.</p><p></p><p>u should be care about rewrite render function with <code>(view.render = somefunction )</code>, because rewrite render function make view repackage render events</p>",related:[{name:"view.mount",target:"view:mount"},{name:"struct.doom",target:"struct:doom"}],examples:[{title:"Basic init",preview:"base2",code:'var v = new aix.view({\n\troot:document.getElementById("base2"),\n\ttemplate:"Hi! &#123;&#123;-text&#125;&#125;",\n\tevents:{\n\t\tinit: function(){\n\t\t\tthis.render({ text: "Cloud" });\n\t\t}\n\t}\n});'},{title:"Custom render",preview:"base3",code:'var rs = struct.random("string");\n\nvar v = new aix.view({\n\troot:document.getElementById("base3"),\n\trender: function(data){\n\t\tvar div = document.createElement("div");\n\t\tdiv.innerHTML = data.text;\n\t\treturn this.root.appendChild(div);\n\t}\n});\n\nv.render({ text: rs(5) });'}]},"view:props":{title:"View [ props ]",introduce:"<code>view.props</code> is methods collection ember in template, it must define at initialize",usages:["props:"],info:"care about <code>props</code> object methods name, dont make same name to <code>render-data</code>",related:[{name:"view.mount",target:"view:mount"},{name:"view.render",target:"view:render"}],examples:[{title:"Basic usage",preview:"base",
code:'var v = new aix.view({\n\ttemplate:"Hi! &#123;&#123;#capit(random(length))&#125;&#125;",\n\tprops:{\n\t\t// dont make method name as \'length\'\n\t\tcapit : struct.string("capitalize"),\n\t\trandom : struct.random("string")\n\t}\n});\n\nv.mount(\n\tdocument.getElementById("base"),\n\t{ length: 6 }\n)'}]},"view:events":{title:"View [ events ]",introduce:"<code>view.events</code> provide a complete mechanism within the view on delegate DOM elements and their own custom events for binding. The event is different form <code>model</code>, <code>route</code>",usages:["view.on(type,fn)","view.emit(type,args)","view.unbind(type,fn)"],params:[{name:"type",type:"String"},{name:"fn",type:"Function"},{name:"args",type:"Array"}],info:'<p><code>view.emit</code> trigger event with mutilp assembly like <code>view.emit("event1,event2,event3,...", [args])</code></p><h2 tc=4>Built-in events</h2>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Event Name</th>\n\t\t\t<th>Event Info</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>init</td>\n\t\t\t<td>when view create, it will trigger <b>once time</b> ( even if it not mount or not trigger render )</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>beforeRender</td>\n\t\t\t<td>before calling the <b>render</b> function</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>completed</td>\n\t\t\t<td>when <b>render</b> completed</td>\n\t\t</tr>\n\t</tbody>\n</table>\n',examples:[{title:"Basic usage",preview:"v1",code:'var v = new aix.view({\n\troot:document.getElementById("v1"),\n\ttemplate:"&#123;&#123;-number&#125;&#125;",\n\tevents:{\n\t\tinit: function(){\n\t\t\tthis.render({ number: 2 });\n\t\t}\n\t}\n});'},{title:"Detect beforeRender",preview:"v2",code:'var v = new aix.view({\n\troot:document.getElementById("base"),\n\ttemplate:"&#123;&#123;-number&#125;&#125;"\n});\n\nv.on("beforeRender",function(data){\n\tdata.number += 2;\n});\n\nv.mount(\n\tdocument.getElementById("v2"),\n\t{ number : 8 }\n)'},{title:"Custom event",preview:"v3",code:'var v = new aix.view({\n\ttemplate:"&lt;input id=\'t\' &gt;" +\n\t\t\t\t\t "&lt;button&gt;send&lt;/button&gt;",\n\tevents:{\n\t\t"click:button":function(event){\n\t\t\tevent.preventDefault();\n\t\t\tvar input = document.getElementById("t");\n\n\t\t\t// event.data.self -> view *this\n\t\t\tevent.data.self.emit(\n\t\t\t\t"send",\n\t\t\t\t[input.value,input.value = ""]\n\t\t\t);\n\t\t},\n\n\t\tsend:function(msg){\n\t\t\talert("your msg [ " +\n\t\t\t\t\t\tmsg +\n\t\t\t\t\t\t" ] has been send!"\n\t\t\t);\n\t\t}\n\t}\n});\n\nv.mount(\n\tdocument.getElementById("v3"),\n\tvoid 0\n)'}]},"view:extend":{title:"View [ Extend ]",introduce:"<code>view.extend</code>,it provides a way of object-oriented programming",usages:["new aix.view.extend(defaultOption)"],params:[{name:"defaultOption",type:"Object"}],examples:[{title:"Basic usage",preview:"v",code:'var v = new aix.view.extend({\n\troot: document.getElementById("v"),\n\ttemplate: "&lt;span&gt;&#123;&#123;-code&#125;&#125;&lt;/span&gt;",\n\tevents: {\n\t\tinit : function(){\n\t\t\tthis.render(this.state);\n\t\t}\n\t}\n});\n\n// extend v\nvar view = new v({\n\tstate : {\n\t\tcode : "JavaScript"\n\t}\n});'}]},"route:listen":{title:"Route.listen",introduce:"<code>route.listen</code> let route start listening the change",usages:["route.listen()","route.listen(default)","route.listen(default,params)"],related:[{name:"route.assign",target:"route:assign"}],params:[{name:"default",type:"String"},{name:"params",type:"Object"}],info:"<p>use it to start <code>routes</code> actions</p>",examples:[{title:"Basic usage",code:'var route = new aix.route({\n\troutes:{\n\t\t"^post":"renderPost"\n\t},\n\tactions:{\n\t\trenderPost:function(param){\n\t\t\talert(\n\t\t\t\t"goto hash post! " + \n\t\t\t\tJSON.stringify(param)\n\t\t\t);\n\t\t}\n\t}\n});\n\nroute.listen("post",{a:1,b:2});'},{title:"Init",not:!0,code:'var route = new aix.route({\n\troutes:{\n\t\t"^index":"index"\n\t},\n\tactions:{\n\t\tindex:function(param){\n\t\t\t// ...\n\t\t}\n\t},\n\tevents:{\n\t\tinit:function(){\n\t\t\t// auto start listen at create\n\t\t\tthis.listen();\n\t\t}\n\t}\n});\n'}]},"route:stop":{title:"Route.stop",introduce:"<code>route.stop</code> let route stop listening the change.",usages:["route.stop()"],info:"<p>use it to stop <code>routes</code> actions</p>"},"route:assign":{title:"Route.assign",introduce:"<code>route.assign</code> trigger hashchange",usages:["route.assign(hash)","route.assign(hash,params)"],related:[{name:"route.listen",target:"route:listen"}],params:[{name:"hash",type:"String"},{name:"params",type:"Object"}],info:"do not add param char in hash string",examples:[{title:"Basic usage",not:!0,code:'// assign to route "post" with param \nvar route = new aix.route( /*...*/ )\nroute.assign("post",{ id : 10243 });'}]},"route:events":{title:"Route [ events ]",introduce:"<code>route.events</code> base events method with route",usages:["route.on(type,fn)","route.emit(type,args)","route.unbind(type,fn)"],params:[{name:"type",type:"String"},{name:"fn",type:"Function"},{name:"args",type:"Array"}],info:"<p><code>view.emit</code> </p><h2 tc=4>Built-in events</h2>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Event Name</th>\n\t\t\t<th>Event Info</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>init</td>\n\t\t\t<td>when route create, it will trigger <b>once time</b></td>\n\t\t</tr>\n\t</tbody>\n</table>\n",examples:[{title:"Basic usage",not:!0,code:'var v = new aix.route({\n\tevents:{\n\t\tinit: function(){\n\t\t\tthis.listen("index");\n\t\t}\n\t}\n});'}]},"route:extend":{title:"Route [ Extend ]",introduce:"<code>route.extend</code>,it provides a way of object-oriented programming",usages:["new aix.route.extend(defaultOption)"],params:[{name:"defaultOption",type:"Object"}],examples:[{title:"Basic usage",not:!0,code:'var route = new aix.route.extend({\n\t\troutes : { /* ... */ },\n\t\tactions : { /* ... */ },\n\t\tinit : function(){\n\t\t\tthis.listen("index");\n\t\t}\n\t}\n});\n\n// extend route\nvar r = new route();'}]},"struct:define":{title:"define",introduce:"<code>struct.define</code> use to define property for object",usages:["define -> struct.define()","define(obj,name,props)"],params:[{name:"obj",type:"Object,Array,Function"},{name:"name",type:"String,Object(properties)"},{name:"props",type:"Object"}],info:"<p>this use method contain <b>Object.defineProperty</b> and <b>Object.defineProperties</b></p>",examples:[{title:"Basic usage",code:'var define = struct.define();\nvar obj = {};\n\ndefine(obj,"a",{\n\tvalue: 1,\n\tconfigurable:false,\n\tenumerable:true,\n\twritable:false\n});\n\nconsole.log(obj);\nobj.a = 2;\nconsole.log(obj);'}]},"struct:extend":{title:"extend",introduce:"<code>struct.extend</code> use to extend property for origin object, will change <b>not</b> origin and return itself",usages:["extend -> struct.extend()","extend(org,obj)"],params:[{name:"org",type:"Object,Array"},{name:"obj",type:"Object,Array"}],related:[{name:"struct.depextend",target:"struct:depextend"}],info:"<p>extend method can also use for Array</p><p>method compress to <code>aix.model</code>, use it as <code>model.extend(target)</code> (compress model data)</p>",examples:[{title:"Basic usage",code:"var extend = struct.extend();\nvar obj = {};\n\nextend(obj,{ a:1,b:2 });\nconsole.log(obj);"},{title:"Use for Array",code:"var extend = struct.extend();\nvar arr = [1,2,3,4];\n\nextend(arr,[5,6,7]);\nconsole.log(arr);"}]},"struct:depextend":{title:"depextend",introduce:"<code>struct.depextend</code> use to extend property for origin object, will <b>change</b> origin and return itself",usages:["depextend -> struct.depextend()","depextend(org,obj)"],params:[{name:"org",type:"Object,Array"},{name:"obj",type:"Object,Array"}],related:[{name:"struct.extend",target:"struct:extend"}],info:"<p>depextend method can also use for Array</p>",examples:[{title:"Basic usage",code:"var extend = struct.depextend();\nvar obj = {};\n\nvar b = extend(obj,{ a:1,b:2 });\nconsole.log(obj,b);"},{title:"Use for Array",code:"var extend = struct.depextend();\nvar arr = [1,2,3,4];\n\nvar b = extend(arr,[5,6,7]);\nconsole.log(arr,b);"}]},"struct:keys":{title:"keys",introduce:"<code>struct.keys</code> use to extend property for origin object, will <b>change</b> origin and return itself",usages:["keys -> struct.keys()","keys(obj)"],params:[{name:"obj",type:"Object,Array"}],info:"<p>Progressive enhancement with this keys method</p>",examples:[{title:"Basic usage",code:"var keys = struct.keys();\nvar obj = {a:1,b:2};\nvar arr = [1,2,3];\n\nconsole.log(keys(obj));\nconsole.log(keys(arr));"}]},"struct:noop":{title:"noop",introduce:"<code>struct.noop</code> point at useless function",usages:["noop -> struct.noop()"],info:"<p>Generally make useless function point to it</p>"},"struct:clone":{title:"clone",introduce:"<code>struct.clone</code> base , fast copy Object and Array",usages:["clone -> struct.clone()","clone(obj)"],params:[{name:"obj",type:"Object,Array"}],related:[{name:"struct.slice",target:"struct:slice"},{name:"struct.depclone",target:"struct:depclone"}],info:"<p>For arrays, the clone method just shallow copy, for object, clone copies only pure data objects</p>",examples:[{title:"Basic usage",code:"var clone = struct.clone();\nvar obj = { a:1, b:2 };\nvar obj2 = clone(obj);\n\nconsole.log(obj,obj2,obj===obj2);"},{title:"Clone array",code:"var clone = struct.clone();\nvar arr = [{a:1},{b:2}];\nvar arr2 = clone(arr);\n\n// care about array\nconsole.log(arr2,arr===arr2,arr[0]===arr2[0]);"}]},"struct:depclone":{title:"depclone",introduce:"deeping clone the Object, Array with there prototypes",usages:["depclone -> struct.depclone()","depclone(obj)"],params:[{name:"obj",type:"Object,Array"}],related:[{name:"struct.clone",target:"struct:clone"}],info:"<p>deeping clone copy the Object, Array completed with there data and prototype</p>",examples:[{title:"Basic usage",code:"var clone = struct.depclone();\nvar obj = { a:1, b:2 };\nvar obj2 = clone(obj);\n\nconsole.log(obj,obj2,obj===obj2);"},{title:"Clone array",code:"var clone = struct.depclone();\nvar arr = [{a:1},{b:2}];\nvar arr2 = clone(arr);\n\n// care about array\nconsole.log(arr2,arr===arr2,arr[0]===arr2[0]);"}]},"struct:not":{title:"not",introduce:"<code>struct.not</code> use to remove target value in Object, Array",usages:["not -> struct.not()","not(obj,find)","not(obj,find,useEqual)"],params:[{name:"obj",type:"Object,Array"},{name:"find",type:"AnyType (exist RegExp)"},{name:"useEqual",type:"Boolean"}],related:[{name:"struct.cat",target:"struct:cat"},{name:"struct.find(filter)",target:"struct:find"}],info:"support <b>RegExp</b> to match the value what u wanto remove",examples:[{title:"Basic usage",code:"var not = struct.not();\nvar obj = [1,2,3,4,5,6];\nvar obj2 = [1,2,3,4,5,6,7];\n\nnot(obj,2);\nnot(obj2,4);\n\nconsole.log(obj,obj2);"},{title:"Use equal",code:"var not = struct.not();\nvar obj = [{a:1},{b:2},{c:3},{d:4}];\n\n// use equal compare\nnot(obj,{a:1},true);\n\nconsole.log(obj);"},{title:"Use RegExp",code:'var not = struct.not();\nvar obj = ["abc","sbc","eds","bce","acb"];\n\n// use RegExp to compare\nnot(obj,/bc/,true);\n\nconsole.log(obj);'},{title:"For Object",code:"var not = struct.not();\nvar obj = { a:1,b:2,c:3,d:1,e:1 };\n\nnot(obj,1);\n\nconsole.log(obj);"}]},"struct:cat":{title:"cat",introduce:"<code>struct.cat</code> use to remove target and cat remove value for return",usages:["cat -> struct.cat()","cat(obj,idf)"],params:[{name:"obj",type:"Object,Array"},{name:"idf",type:"AnyType (exist RegExp)"}],related:[{name:"struct.not",target:"struct:not"}],info:"support <b>RegExp</b> to match the value what u wanto remove and cat",examples:[{title:"Basic usage",code:"var cat = struct.cat();\nvar obj = [1,2,3,4,5,6];\nvar cobj = cat(obj,function(n){ return n>3 });\n// part2\nvar obj2 = [1,1,3,4,5];\nvar cobj2 = cat(obj2,1);\n\nconsole.log(obj,cobj);\nconsole.log(obj2,cobj2);"},{title:"Use Regexp",code:'var cat = struct.cat();\nvar obj = ["abc","asd","vjs","bsd","zos"];\nvar cobj = cat(obj,/a/);\n\nconsole.log(obj,cobj);'},{title:"For Object",code:"var cat = struct.cat();\nvar obj = {a:1,b:2,c:3,d:4,f:5};\nvar cobj = cat(obj,function(v){ return v>3 });\n\nconsole.log(obj,cobj);"}]},"struct:slice":{title:"slice",introduce:"<code>struct.slice</code> fast copy Array(shawllow) and convert ArrayLike to array",usages:["slice -> struct.slice()","slice(obj)"],params:[{name:"obj",type:"Array"}],related:[{name:"struct.clone",target:"struct:clone"}],info:"<p>use it to copy Array or convert ArrayLike( arguments )</p>",examples:[{title:"Basic usage",code:"var slice = struct.slice();\nvar obj = [1,2,3,4];\nconsole.log(slice(obj));"},{title:"Slice arguments",code:'var slice = struct.slice();\nvar fn = function(){\n\treturn slice(arguments);\n};\nconsole.log(fn(1,2,3,"4"));'}]},"struct:find":{title:"find",introduce:"<code>struct.find</code> fast filter value for Object and Array",usages:["alias: (filter)","find -> struct.find()","filter -> struct.filter()","find(obj,idf)"],params:[{name:"obj",type:"Object,Array"},{name:"idf",type:"Function,RegExp"}],related:[{name:"struct.reject",target:"struct:reject"},{name:"struct.not",target:"struct:not"},{name:"struct.cat",target:"struct:cat"}],info:"<p>use to filter Object</p><p>it return new <code>copy</code></p>",examples:[{title:"Basic usage",code:"var find = struct.find();\nvar obj = [1,2,3,4];\nvar fobj = find(obj,function(n){\n\treturn n>2;\n});\nconsole.log(obj,fobj);"},{title:"Use RegExp",code:'var find = struct.find();\nvar obj = ["abc","cad","sad","csv","dfa","bfw"];\nvar fobj = find(obj,/d/)\nconsole.log(obj,fobj);'},{title:"For Object",code:'var find = struct.find();\nvar obj = { a:"as", b:"sd", c:"saw", d:"vc" }\nvar fobj = find(obj,/a/)\nconsole.log(obj,fobj);'}]},"struct:reject":{title:"reject",introduce:"<code>struct.reject</code> fast filter value for Object and Array, reverse to filter",usages:["reject -> struct.reject()","reject(obj,idf)"],params:[{name:"obj",type:"Object,Array"},{name:"idf",type:"Function,RegExp"}],related:[{name:"struct.find(filter)",target:"struct:find"},{name:"struct.not",target:"struct:not"},{name:"struct.cat",target:"struct:cat"}],info:"<p>use to filter Object</p><p>it return new <code>copy</code></p>",examples:[{title:"Basic usage",code:"var reject = struct.reject();\nvar obj = [1,2,3,4];\nvar fobj = reject(obj,function(n){\n\treturn n>2;\n});\nconsole.log(obj,fobj);"},{title:"Use RegExp",code:'var reject = struct.reject();\nvar obj = ["abc","cad","sad","csv","dfa","bfw"];\nvar fobj = reject(obj,/d/)\nconsole.log(obj,fobj);'},{title:"For Object",code:'var reject = struct.reject();\nvar obj = { a:"as", b:"sd", c:"saw", d:"vc" }\nvar fobj = reject(obj,/a/)\nconsole.log(obj,fobj);'}]},"struct:every":{title:"every",introduce:"<code>struct.every</code> check if all the value pass identify",usages:["every -> struct.every()","every(obj,idf)"],params:[{name:"obj",type:"Object,Array"},{name:"idf",type:"Function,RegExp"}],related:[{name:"struct.some",target:"struct:some"}],info:"<p>Also can use for RegExp</p>",examples:[{title:"Basic usage",code:"var every = struct.every();\nvar obj = [1,2,3,4];\nvar fobj = every(obj,function(n){\n\treturn n>0;\n});\nconsole.log(fobj);"}]},"struct:some":{title:"some",introduce:"<code>struct.some</code> check if there is at least one pass identify",usages:["some -> struct.some()","some(obj,idf)"],params:[{name:"obj",type:"Object,Array"},{name:"idf",type:"Function,RegExp"}],related:[{name:"struct.every",target:"struct:every"}],info:"<p>Also can use for RegExp</p>",examples:[{title:"Basic usage",code:"var some = struct.some();\nvar obj = [1,2,3,4];\nvar fobj = some(obj,function(n){\n\treturn n>3;\n});\nconsole.log(fobj);"}]},"struct:diff":{title:"diff",introduce:"<code>struct.diff</code> diff the Array",usages:["diff -> struct.diff()","diff(...args)"],params:[{name:"args",type:"Array"}],related:[{name:"struct.intsec",target:"struct:intsec"}],info:"diff any length Array arguments",examples:[{title:"Basic usage",code:"var diff = struct.diff();\nvar df = diff([1,2,3,4],[0,3,4]);\nconsole.log(df);"},{title:"Mutilp usage",code:'var diff = struct.diff();\nvar df = diff([0,3,4],[2,0,1,4],["3",3]);\nconsole.log(df);'},{title:"With single value",code:'var diff = struct.diff();\nvar df = diff([0,4],3,4,["3",3]);\nconsole.log(df);'}]},"struct:intsec":{title:"intsec",introduce:"<code>struct.intsec</code> intsec same values the Array",usages:["intsec -> struct.intsec()","intsec(...args)"],params:[{name:"args",type:"Array"}],related:[{name:"struct.diff",target:"struct:diff"}],info:"intsec same any length Array arguments",examples:[{title:"Basic usage",code:"var intsec = struct.intsec();\nvar df = intsec([1,2,4],[2,4],[4,2]);\nconsole.log(df);"},{title:"Mutilp usage",code:'var intsec = struct.intsec();\nvar df = intsec([0,3],[2,0,3],["3",0]);\nconsole.log(df);'},{title:"For same object",code:"var intsec = struct.intsec();\nvar df = intsec([{a:1}],[{a:1},{b:1}],[{a:1},{c:2}]);\nconsole.log(df);"}]},"struct:chunk":{title:"chunk",introduce:"<code>struct.chunk</code> make part for array",usages:["chunk -> struct.chunk()","chunk(arr,size)"],params:[{name:"arr",type:"Array"},{name:"size",type:"Number"}],info:"default size part of 2",examples:[{title:"Basic usage",code:"var chunk = struct.chunk();\nconsole.log(chunk([1,2,3,4,5,6],3));"},{title:"Default part",code:"var chunk = struct.chunk();\nconsole.log(chunk([1,2,3,4,5,6]));"}]},"struct:compact":{title:"compact",introduce:"<code>struct.compact</code> filter true value for Array",usages:["compact -> struct.compact()","compact(arr)"],params:[{name:"arr",type:"Array"}],related:[{name:"struct.find(filter)",target:"struct:find"}],examples:[{title:"Basic usage",code:'var compact = struct.compact();\nconsole.log(compact([null,1,undefined,2,"0",0,"a",true,false]));'}]},"struct:pluck":{title:"pluck",introduce:"<code>struct.pluck</code> collect target values list",usages:["pluck -> struct.pluck()","pluck(list,mapkey)","pluck(list,mapkey,dowith)"],params:[{name:"list",type:"Array,Object"},{name:"mapkey",type:"String"},{name:"dowith",type:"String,Function"}],related:[{name:"struct.groupBy",target:"struct:groupBy"},{name:"struct.countBy",target:"struct:countBy"}],info:"<p>use the dowith to fack the value</p>",examples:[{title:"Basic usage",code:'var pluck = struct.pluck();\nvar data = { \n\ta : { a : 1, b : 6 }, \n\tb : { a : 2, b : 5 }, \n\tc : { a : 3, b : 4 }, \n\td : { a : 4, b : 3 }, \n\te : { a : 5, b : 2 }, \n\tf : { a : 6, b : 1 } \n};\nconsole.log(pluck(data,"a"));\nconsole.log(pluck(data,"b","toString"));'},{title:"Deeping key",code:'var pluck = struct.pluck();\nvar data = { \n\ta : [ { a:[1,2] }, { b:[6,7] } ], \n\tb : [ { a:[2,3] }, { b:[5,6] } ], \n\tc : [ { a:[3,4] }, { b:[4,5] } ], \n\td : [ { a:[4,5] }, { b:[3,4] } ], \n\te : [ { a:[5,6] }, { b:[2,3] } ], \n\tf : [ { a:[6,7] }, { b:[1,2] } ] \n};\nconsole.log(pluck(data,"0.a.1"));\nconsole.log(pluck(data,"1.b.0","toString"));'}]},"struct:groupBy":{title:"groupBy",introduce:"<code>struct.groupBy</code> group part of data",usages:["groupBy -> struct.groupBy()","groupBy(list,by)"],params:[{name:"list",type:"Array"},{name:"by",type:"String,Function"}],related:[{name:"struct.pluck",target:"struct:pluck"},{name:"struct.countBy",target:"struct:countBy"}],info:"<p>use the dowith to fack the value</p>",examples:[{title:"Basic usage",code:'var groupBy = struct.groupBy();\nvar data = [ \n\t{ name : "Nike"   , score : 68 }, \n\t{ name : "Joye"   , score : 30 }, \n\t{ name : "Sam"    , score : 81 }, \n\t{ name : "Cloudy" , score : 22 }, \n\t{ name : "Marry"  , score : 98 }, \n\t{ name : "Leon"   , score : 94 } \n];\nvar check = groupBy(data,function(item){\n\treturn item.score>60 ? "pass" : "notpass";\n});\nconsole.log(check);'},{title:"By porperty",code:'var groupBy = struct.groupBy();\nvar data = [ \n\t{ name : "Nike"   , course : [1,3] }, \n\t{ name : "Nike"   , course : [6,9] }, \n\t{ name : "Sam"    , course : [1] }, \n\t{ name : "Cloudy" , course : [4,6] }, \n\t{ name : "Sam"    , course : [2,4] }, \n\t{ name : "Leon"   , course : [9] } \n];\nvar check = groupBy(data,"name")\nconsole.log(check);'}]},"struct:countBy":{title:"countBy",introduce:"<code>struct.countBy</code> group part of data",usages:["countBy -> struct.countBy()","countBy(list,by)"],params:[{name:"list",type:"Array"},{name:"by",type:"String,Function"}],related:[{name:"struct.pluck",target:"struct:pluck"},{name:"struct.groupBy",target:"struct:groupBy"}],info:"<p>use the dowith to fack the value</p>",examples:[{title:"Basic usage",code:'var countBy = struct.countBy();\nvar data = [ \n\t{ name : "Nike"   , score : 68 }, \n\t{ name : "Joye"   , score : 30 }, \n\t{ name : "Sam"    , score : 81 }, \n\t{ name : "Cloudy" , score : 22 }, \n\t{ name : "Marry"  , score : 98 }, \n\t{ name : "Leon"   , score : 94 } \n];\nvar check = countBy(data,function(item){\n\treturn item.score>60 ? "pass" : "notpass";\n});\nconsole.log(check);'},{title:"By porperty",code:'var countBy = struct.countBy();\nvar data = [ \n\t{ name : "Nike"   , course : [1,3] }, \n\t{ name : "Nike"   , course : [6,9] }, \n\t{ name : "Sam"    , course : [1] }, \n\t{ name : "Cloudy" , course : [4,6] }, \n\t{ name : "Sam"    , course : [2,4] }, \n\t{ name : "Leon"   , course : [9] } \n];\nvar check = countBy(data,"name")\nconsole.log(check);'}]},"struct:concat":{title:"concat",introduce:"<code>struct.concat</code> concat mutilp array",usages:["concat -> struct.concat()","concat(..args)"],params:[{name:"..args",type:"Array,SingleValue"}],related:[{name:"struct.merge",target:"struct:merge"}],examples:[{title:"Basic usage",code:"var concat = struct.concat();\nconsole.log(concat([1,2],[3,4,5],6,[7],8))"}]},"struct:cast":{title:"cast",introduce:"<code>struct.cast</code> fast cast arguments",usages:["cast -> struct.cast()","cast(..args)"],params:[{name:"..args",type:"AnyType"}],related:[{name:"struct.concat",target:"struct:concat"},{name:"struct.merge",target:"struct:merge"}],examples:[{title:"Basic usage",code:"var cast = struct.cast();\nconsole.log(cast([1,2],[3,4,5],6,[7],8));"}]},"struct:shuffle":{title:"shuffle",introduce:"<code>struct.shuffle</code> array of random sequence",usages:["shuffle -> struct.shuffle()","shuffle()"],examples:[{title:"Basic usage",code:"var shuffle = struct.shuffle();\nconsole.log(shuffle([1,2,3,4,5,6]));\nconsole.log(shuffle([1,2,3,4,5,6]));"}]},"struct:first":{title:"first",introduce:"<code>struct.first</code> first value in array",usages:["first -> struct.first()","first(ary)"],params:[{name:"ary",type:"Array"}],examples:[{title:"Basic usage",code:"var first = struct.first();\nconsole.log(first([1,2,3]));"}]},"struct:last":{title:"last",introduce:"<code>struct.last</code> last value in array",usages:["last -> struct.last()","last(ary)"],params:[{name:"ary",type:"Array"}],examples:[{title:"Basic usage",code:"var last = struct.last();\nconsole.log(last([1,2,3]));"}]},"struct:flat":{title:"flat",introduce:"<code>struct.flat</code> deconstruction array",usages:["flat -> struct.flat()","flat(arr,deep)"],params:[{name:"arr",type:"Array"},{name:"deep",type:"Boolean"}],related:[{name:"struct.merge",target:"struct:merge"},{name:"struct.pluck",target:"struct:pluck"}],info:"<p>default use a layer of flat</p>",examples:[{title:"Basic usage",code:"var flat = struct.flat();\nconsole.log(flat([1,2,[3,4,[5,6,[7,8]]]]));"},{title:"Deeping flat",code:"var flat = struct.flat();\nconsole.log(flat([1,2,[3,4,[5,6,[7,8]]]],true));"}]},"struct:merge":{title:"merge",introduce:"<code>struct.merge</code> merge the same data on mutilp array",usages:["merge -> struct.merge()","merge(...args)"],params:[{name:"...args",type:"Array"}],related:[{name:"struct.concat",target:"struct:concat"},{name:"struct.unique",target:"struct:unique"}],examples:[{title:"Basic usage",code:"var merge = struct.merge();\nconsole.log(merge([1,2,3],[2,4,3],[2,1],[5,1]));"}]},"struct:auto":{title:"auto",introduce:"<code>struct.auto</code> random slice part in Array  or String",usages:["auto -> struct.auto()","auto(arr)","auto(arr,num)"],params:[{name:"arr",type:"Array,String"},{name:"num",type:"Number"}],related:[{name:"struct.shuffle",target:"struct:shuffle"},{name:"struct.random",target:"struct:random"}],info:"<p>default part size 1</p>",examples:[{title:"Basic usage",code:"var auto = struct.auto();\nconsole.log(auto([1,2,3,4,5]));\nconsole.log(auto([1,2,3,4,5],3));"},{title:"For String",code:'var auto = struct.auto();\nconsole.log(auto("Hello"));\nconsole.log(auto("SKULLCANDY",3));'}]},"struct:part":{title:"part",introduce:"<code>struct.part</code> generate part times function",usages:["part -> struct.part()","part(fn)","part(fn,times)"],params:[{name:"fn",type:"Function"},{name:"times",type:"Number"}],related:[{name:"struct.once",target:"struct:once"}],info:"<p>default part size 1, if not has <code>times</code> param, the <code>part(fn)</code> equal to use <code>once(fn)</code></p>",examples:[{title:"Basic usage",code:"var part = struct.part();\nvar a = 0;\nvar fn = part(function(){ a++; },2);\n// run it 4 times\nfn();fn();fn();fn();\nconsole.log(a);"}]},"struct:once":{title:"once",introduce:"<code>struct.once</code> generate once times function",usages:["once -> struct.once()","once(fn)"],params:[{name:"fn",type:"Function"}],related:[{name:"struct.part",target:"struct:part"}],examples:[{title:"Basic usage",code:"var once = struct.once();\nvar a = 0;\nvar fn = once(function(){ a++; });\n// run it 4 times\nfn();fn();fn();fn();\nconsole.log(a);"}]},"struct:eq":{title:"eq",introduce:"<code>struct.eq</code> advanced method to compare isEqual",usages:["eq -> struct.eq()","eq(a,b)"],params:[{name:"a,b",type:"AnyType"}],info:"<p>By default, we use <code>==</code> and <code>===</code> to compare two variable in JavaScript. Think that : <code>{a:1}==={a:1}</code>, In theory，we believe that as long as the key and value are the same object should be equal</p>",examples:[{title:"Basic usage",code:"var eq = struct.eq();\nconsole.log({a:1}==={a:1});\nconsole.log(eq({a:1},{a:1}));"},{title:"Complex data",code:"var eq = struct.eq();\nconsole.log(eq(\n\t[{a:[{b:1,c:[2,{d:3,e:[4,5]}]}]}],\n\t[{a:[{b:1,c:[2,{d:3,e:[4,5]}]}]}]\n));"}]},"struct:values":{title:"values",introduce:"<code>struct.values</code> directly get values collection form Object",usages:["values -> struct.values()","values(obj)"],params:[{name:"obj",type:"Object"}],info:"<p>also use it for String, but not make sense</p>",examples:[{title:"Basic usage",code:'var values = struct.values();\nconsole.log(values({ a:1, b:2, d:"3"}));'},{title:"Complex data",code:'var values = struct.values();\nconsole.log((values("MyName")));'}]},"struct:memoize":{title:"memoize",introduce:"<code>struct.memoize</code> create memoize function ,store result in memory",usages:["memoize -> struct.memoize()","memoize(fn)","memoize(fn,context)"],params:[{name:"fn",type:"Function"},{name:"context",type:"AnyType"}],info:"<p><code>context</code> allow u bind this for <code>fn</code>.</p>",examples:[{title:"Basic usage",code:"var memoize = struct.memoize();\nvar b = 1;\nvar fn = function(a){\n\t// variable [b] natural growth\n\treturn a+(b++);\n};\nvar fnmemo = memoize(fn);\n\nconsole.log(fnmemo(1));\nconsole.log(fnmemo(1));\nconsole.log(fnmemo(1));"}]},"struct:negate":{title:"negate",introduce:"<code>struct.negate</code> create reverse result function",usages:["negate -> struct.negate()","negate(fn)","negate(fn,context)"],params:[{name:"fn",type:"Function"},{name:"context",type:"AnyType"}],info:"<p><code>context</code> allow u bind this for <code>fn</code>.</p>",examples:[{title:"Basic usage",code:"var negate = struct.negate();\nvar fn = negate(function(){ return true; });\nconsole.log(fn());"}]},"struct:link":{title:"link",introduce:"<code>struct.link</code> create a continuous execution stack",usages:["link -> struct.link()","link(...args)"],params:[{name:"...args",type:"Function"}],info:"<p>Function of execution order is determined based on the order through time, that you can only use <code>single param</code></p>",examples:[{title:"Basic usage",code:"var _ = struct.link();\nvar fn = function(a){ return a+a; };\nvar fn1 = function(c){ return c*c };\nvar fn2 = function(d){ return d/2; };\n\n// create stack chain\nvar link = _(fn,fn1,fn2);\n\n// 2+2  = 4\n// 4*4  = 16\n// 16/2 = 8\nconsole.log(link(2));"}]},"struct:size":{title:"size",introduce:"<code>struct.size</code> check variable length(size)",usages:["size -> struct.size()","size(obj)"],params:[{name:"obj",type:"AnyType"}],info:"<p>if primitive not has <code>length</code> property. as it become <code>null</code><code>undefined</code> size to be 0</p>",examples:[{title:"Basic usage",code:"var size = struct.size();\nconsole.log(size([1,2,3]))\nconsole.log(size('abcd'))\nconsole.log(size({a:1,b:3,c:2}))\nconsole.log(size(null))\nconsole.log(size(NaN))"}]},"struct:now":{title:"now",introduce:"<code>struct.now</code> now Date Unix timestamp",usages:["now -> struct.now()","now()"],examples:[{title:"Basic usage",code:"var now = struct.now();\nconsole.log(now())"}]},"struct:sort":{title:"sort",introduce:"<code>struct.sort</code> array sort method( will rewirte at <code>VERSION 1.1</code>)",usages:["sort -> struct.sort()","sort(arr)","sort(arr,compare)"],info:"<p>it use default <code>Array.sort</code></p>",examples:[{title:"Basic usage",code:"var sort = struct.sort();\nvar a = [10,9,8,2,1];\nconsole.log(sort(a))"},{title:"Use compare",code:"var sort = struct.sort();\nvar a = [1,9,4,8,3,2,6];\nconsole.log(sort(a,function(a,b){ return b-a; }))"}]},"struct:each":{title:"each [ array,object ]",introduce:"<code>struct.each</code>, simple loop function",usages:["Each -> struct.each()",'ArrayEach -> struct.each("array")','ObjectEach -> struct.each("object")',"","Each( list,fn(val,key|index,list),context )","ArrayEach( arr,fn(val,index,arr),context )","ObjectEach( obj,fn(val,key,obj),context )"],params:[{name:"list",type:"Array,Object"},{name:"arr",type:"Array"},{name:"obj",type:"Object"},{name:"fn",type:"Function"},{name:"context",type:"AnyType"}],info:"<p> if u already now typeof <code>list</code>, that u should use <code>each(array|object)</code> current target,</p><p><code>each</code> api is best than <code>Array.forEach</code> or <code>for in</code> loop</p>",examples:[{title:"Basic usage",code:'var each = struct.each();\nvar arr = [1,2,3,4];\nvar obj = { Nike:1, Cloud:2, Sam:3, Buke:4 };\nvar a=0,b="Pack";\n\n// each action\neach(arr,function(num){ a+=num; });\neach(obj,function(val,name){ b+=","+name; });\nconsole.log(a);\nconsole.log(b)'},{title:"For Array",code:'var each = struct.each("array");\nvar arr = [1,2,3,4],a=1;\n\n// each action\neach(arr,function(num){ a=a*num; });\nconsole.log(a)'},{title:"Bind Context",code:'var each = struct.each("object");\nvar obj = { Nike:98, Cloud:18, Sam:21 },\n\t\ta=[];\n\n// each action bind context(a)\neach(obj, function(score){\n\tthis.push(score);\n}, a);\nconsole.log(a)'}]},"struct:map":{title:"map [ key,hook ]",introduce:"<code>struct.map</code>, mapping method for Array and isObject",usages:["Map -> struct.map()",'Hook -> struct.map("hook")','MapKey -> struct.map("key")',"","Map( list,fn(val,index,list) )","Hook( list,fn(val,index,arr) )","MapKey( obj,fn(val,key,obj) )"],params:[{name:"list",type:"Array,Object"},{name:"obj",type:"Object"},{name:"fn",type:"Function"}],info:"<p>instanceof <code>Array.map</code></p><p><code>hook</code> is compress advance mapping method</p>",examples:[{title:"Basic usage",code:"var map = struct.map();\nvar a = [0,1,2,3,4];\nvar b = map(a,function(n){ return n+1; });\nconsole.log(a,b)"},{title:"Hook",code:'var hook = struct.map("hook");\nvar a = [0,1,2,3,4];\nvar b = hook(a,"valueOf");\nvar c = hook(a,function(n){ return n*n; });\nconsole.log(a);\nconsole.log(b,c);'},{title:"Mapping Key",code:'var mapkey = struct.map("key");\nvar a = { a:1, b:2, c:3 };\nvar b = mapkey(a,function(val,key){\n\treturn key+val;\n});\nconsole.log(b);'}]},"struct:has":{title:"has [ key ]",
introduce:"<code>struct.has</code> check param in Array or Object",usages:["Has -> struct.has()",'HasKey -> struct.has("key")',"","Has( list,value,useEqual )","HasKey( list,value,useEqual )"],params:[{name:"list",type:"Array,Object"},{name:"value",type:"AnyType"},{name:"useEqual",type:"Boolean"}],examples:[{title:"Basic usage",code:"var has = struct.has();\nvar a = [0,1,2,3,4];\nconsole.log(has(a,2))\nconsole.log(has(a,5))"},{title:"Use eq",code:"var has = struct.has();\nvar a = [{a:1},{b:2},{c:{a:{b:1}}}];\nconsole.log(has(a,{c:{a:{b:1}}},true))\nconsole.log(has(a,{a:1},true))\nconsole.log(has(a,{a:1}))"},{title:"Has Key",code:'var has = struct.has("key");\nvar a = {a:1,b:2,c:3};\nconsole.log(has(a,"a"))'}]},"struct:type":{title:"type [ ... ]",introduce:"<code>struct.type</code> ",usages:["type -> struct.type()","",'isObject -> struct.type("object")','isArray -> struct.type("array")','isArrayLike -> struct.type("arraylike")','isFunction -> struct.type("function")','isNaN -> struct.type("nan")','isPrimitive -> struct.type("prim")','isIdentifier -> struct.type("idt")','isDefine -> struct.type("define")','isInt -> struct.type("int")','isFloat -> struct.type("float")','isDate -> struct.type("date")','isEmpty -> struct.type("empty")','isElement -> struct.type("elm")','isNative -> struct.type("native")',"","isDefine(val,defineName)"],params:[{name:"val",type:"AnyType"},{name:"defineName",type:"String"}],examples:[{title:"Basic usage",code:'var type = struct.type();\nconsole.log(type({a:1}))\nconsole.log(type([1,2,3]))\nconsole.log(type(1))\nconsole.log(type("a"))\nconsole.log(type(null))\nconsole.log(type(NaN))\nconsole.log(type(void 0))\nconsole.log(type(struct.noop()))\nconsole.log(type(Date))'},{title:"Check Native",code:'var type = struct.type("native");\nconsole.log(type(alert))\nconsole.log(type(console))\nconsole.log(type(struct.noop()))'},{title:"Detect arguments",code:'var isAryL = struct.type("arraylike");\nvar isAry = struct.type("array");\nvar fn = function(){ \n\tconsole.log(\n\t\tisAry(arguments),\n\t\tisAryL(arguments)\n\t); \n};\nfn(1,2,3,4);'}]},"struct:html":{title:"html [ encode,decode,strip ]",introduce:"<code>struct.html</code> encode decode pack with html string",usages:['encode -> struct.html("encode")','decode -> struct.html("decode")','strip -> struct.html("strip")',"","html(htmlStr)"],params:[{name:"htmlStr",type:"String"}],examples:[{title:"Basic usage",code:'var encode = struct.html("encode");\nconsole.log(encode("&lt;div&gt;&lt;/div&gt;"))'}]},"struct:unique":{title:"unique [ fast ]",introduce:"<code>struct.unique</code> fast unique in Array",usages:["slimUnique -> struct.unique()",'fastUnique -> struct.unique("fast")',"","slimUnique(arr)","fastUnique(arr)"],params:[{name:"arr",type:"Array"}],info:"<p>care about <code>(fast)unqiue</code>, it also use for pure same typeof <code>string,number</code> array, if the array exist <code>function,array,object</code>, it will get error</p>",examples:[{title:"Basic usage",code:'var unique = struct.unique("fast");\nconsole.log(unique([1,3,2,1,4,5,6,2,3,5,4,1,1,4,2,5,6,8,7,3,1,2,8]))'}]},"struct:convert":{title:"convert [ ... ]",introduce:"<code>struct.convert</code> safe type convert",usages:["toString -> struct.convert()",'toString -> struct.convert("str")','toNumber -> struct.convert("num")','toArray  -> struct.convert("arr")','toHEX    -> struct.convert("hex")','toRGB    -> struct.convert("rgb")','toMinus  -> struct.convert("minus")'],info:"<p>the method to safe convert. see more info form tables:</p>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Convert method</th>\n\t\t\t<th>Usage info</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>toString</td>\n\t\t\t<td>Safe to String, use if it exist first, or return empty string</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>toNumber</td>\n\t\t\t<td>Safe to Number, if it can convert to number, or return 0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>toArray</td>\n\t\t\t<td>Safe to Array, return a array eternal</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>toHEX</td>\n\t\t\t<td>Convert RGB object <code>{r:255,g:255,b:255}</code> to HEX string #<code>ffffff</code></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>toRGB</td>\n\t\t\t<td>Convert HEX string <code>#ffffff</code> to RGB object <code>{r:255,g:255,b:255}</code></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>toMinus</td>\n\t\t\t<td>Convert number minus <code>1</code> to <code>-1</code></td>\n\t\t</tr>\n\t</tbody>\n</table>\n",examples:[{title:"Basic usage",code:"var toString = struct.convert();\nconsole.log(toString([1,3,2]))\nconsole.log(toString({ a:1, b:2 }))\nconsole.log(toString(struct.noop()))\nconsole.log(toString(null))\nconsole.log(toString(void 0))\nconsole.log(toString(213))"},{title:"toNumber",code:'var toNumber = struct.convert("number");\nconsole.log(toNumber(null));\nconsole.log(toNumber("abc"));\nconsole.log(toNumber("213"));'},{title:"toArray",code:'var toArray = struct.convert("array");\nconsole.log(toArray({a:1,b:2,c:3}));\nconsole.log(toArray("1234"));\nconsole.log(toArray(1));\nconsole.log(toArray(null));'}]},"struct:pull":{title:"pull [ at,with,all ]",introduce:"<code>struct.pull</code> fast pull elm in Array",usages:["pullAll -> struct.pull()",'pullAt -> struct.pull("at")','pullWith -> struct.pull("with")',"","pullAll(arr,...args)","pullAt(arr,...indexs)","pullWith(arr,val)"],params:[{name:"arr",type:"Array"},{name:"val",type:"AnyType"},{name:"...args",type:"AnyType"},{name:"...indexs",type:"Number"}],info:"<p>pull position or value form Array, change origin ary</p>",examples:[{title:"Basic usage",code:'var pullAll = struct.pull("all");\nconsole.log(pullAll([1,2,3,4],1,2))'},{title:"At index",code:'var pullAt = struct.pull("at");\nconsole.log(pullAt([1,2,3,4],1,2))'},{title:"With single",code:"var pull = struct.pull();\nconsole.log(pull([1,2,3,4],4))"}]},"struct:drop":{title:"drop [ ... ]",introduce:"<code>struct.drop</code> fast drop part size in Array",usages:['dropLeft -> struct.drop("left")','dropRight -> struct.drop("right")','dropLeftTo -> struct.drop("leftto")','dropRightTo -> struct.drop("rightto")',"","dropLeft(arr,pos)","dropLeftTo(arr,until)"],params:[{name:"arr",type:"Array"},{name:"pos",type:"Number"},{name:"until",type:"AnyType"}],info:"<p><code>dropTo</code> means drop until assert defined value</p>",examples:[{title:"Basic usage",code:'var dropLeft = struct.drop("left");\nconsole.log(dropLeft([1,2,3,4],2))'},{title:"Drop form Right",code:'var dropRight = struct.drop("right");\nconsole.log(dropRight([1,2,3,4],2))'},{title:"Drop until catch",code:'var drop = struct.drop("leftto");\nconsole.log(drop([1,2,"2",3,4,5],"2"))'}]},"struct:param":{title:"param [ ... ]",introduce:"<code>struct.param</code> given binding method for params queryString",usages:["pmParse -> struct.param()",'pmParse -> struct.param("parse")','pmRequery -> struct.param("query")','pmStringify -> struct.param("serialize")',"","pmParse(paramString)","pmStringify(paramObject)","pmRequery([jQuery|Zepto]serializeArray)"],params:[{name:"paramString",type:"String"},{name:"paramObject",type:"Object"},{name:"serializeArray",type:"Array"}],info:"<p><code>param(query)</code> to parse <code>jQuery|Zepto</code> serializeArray API export</p>",examples:[{title:"Basic usage",code:'var parse = struct.param();\nvar url = "https://chrome.google.com/search/LocalStorage?hl=en-US&_category=extensions";\nvar param = "sl=strick&wonder=true&catch=1&id=2001";\nconsole.log(parse(url));\nconsole.log(parse(param));'},{title:"Param serialize",code:'var serialize = struct.param("serialize");\nvar param = {\n\tid : 2014,\n\tsearch : "hl-cake",\n\ttrick: false\n};\nconsole.log(serialize(param));'},{title:"Use Requery",code:'var query = struct.param("query");\n// jQuery form.serializeArray cap formData\nvar serializeArray = [\n\t{ name:"sj"     , value:"something" }     ,\n\t{ name:"search" , value:"goods" }         ,\n\t{ name:"score"  , value:1088 }            ,\n\t{ name:"p"      , value:"dekAx_SADodPS" } ,\n];\nconsole.log(query(serializeArray));'}]},"struct:ajax":{title:"ajax [ ... ]",introduce:"<code>struct.ajax</code> basic ajax method with appliction",usages:["ajax -> struct.ajax()",'aget -> struct.ajax("get")','apost -> struct.ajax("post")','jsonp -> struct.ajax("jsonp")',"","ajax(option)","jsonp(option)","aget (url,[param].success,error)","apost(url,[param].success,error)"],params:[{name:"option",type:"Object"},{name:"url",type:"String"},{name:"param",type:"String,Object,NOT"},{name:"success",type:"Function"},{name:"error",type:"Function"}],info:"<p><code>param</code> is not necessary argument</p><p>ajax ,ethod support <code>JSONP</code></p>",examples:[{title:"Basic usage",not:!0,code:"var ajax = struct.ajax();\najax({\n\turl         : /* string */,\n\ttype        : /* string */,\n\tparam       : /* string | object */,\n\tsuccess     : /* function */,\n\terror       : /* function */,\n\ttimeout     : /* number */,\n\tcache       : /* boolean */,\n\tvalid       : /* boolean */,\n\theader      : /* object */,\n\tcharset     : /* string */,\n\tcontentType : /* boolean */\n});"},{title:"Use get",not:!0,code:'var get = struct.ajax("get");\nget("/ajax/data1",function(res){\n\t//success for response data\n\tconsole.log(res);\n});'}]},"struct:event":{title:"event [ on,unbind,emit ]",introduce:"<code>struct.event</code> given pure object event capable",usages:['addEvent -> struct.event("on")','hasEvent -> struct.event("has")','copyEvent -> struct.event("copy")','emitEvent -> struct.event("emit")','unbindEvent -> struct.event("unbind")',"","addEvent(obj,type,fn)","hasEvent(obj,type,fn)","unbindEvent(obj,type,fn)","emitEvent(obj,type,args)","copyEvent(obj,related)"],params:[{name:"obj",type:"Object,Array,Function"},{name:"type",type:"String"},{name:"fn",type:"Function"},{name:"args",type:"Array,NOT"},{name:"related",type:"Object,Array,Function"}],info:"<p></p>",examples:[{title:"Basic usage",code:'var on = struct.event("on");\nvar emit = struct.event("emit");\n\nvar o = {};\non(o,"myevent",function(a,b){\n\tconsole.log(a+b);\n});\n\nemit(o,"myevent",[1,2]);'},{title:"Has event",code:'var on = struct.event("on");\nvar has = struct.event("has");\n\nvar o = {};\non(o,"myevent",struct.noop());\non(o,"mysun",struct.noop());\n\nconsole.log(has(o,"mysun"));\nconsole.log(has(o,"myevent",struct.noop()));\nconsole.log(has(o,"myevent",function(){}));'}]},"struct:prop":{title:"prop [ get,set,not ]",introduce:"<code>struct.prop</code> given pure object prop capable",usages:['getProp -> struct.prop("get")','setProp -> struct.prop("set")','removeProp -> struct.prop("not")',"","getProp(obj,name,dowith,...args)","setProp(obj,name,value)","removeProp(obj,name)"],params:[{name:"obj",type:"Object,Array,Function"},{name:"name",type:"String,Number"},{name:"value",type:"AnyType"},{name:"dowith",type:"String,Function"}],info:"<p>advance method ADRC property</p>",examples:[{title:"Basic usage",code:'var get = struct.prop("get");\n\nvar o = { a:{ b:{ c:2 } } };\nconsole.log(get(o,"a.b.c"));'},{title:"Set property",code:'var set = struct.prop("set");\n\nvar o = {};\nconsole.log(set(o,"a",213));'}]},"struct:pairs":{title:"pairs [ un ]",introduce:"<code>struct.pairs</code> pairs unpairs data",usages:["pairs -> struct.pairs()",'unpairs -> struct.pairs("un")',"","pairs(obj)","unpairs(arr)"],params:[{name:"obj",type:"Object"},{name:"ary",type:"Array"}],examples:[{title:"Basic usage",code:"var pairs = struct.pairs();\n\nconsole.log(pairs({a:1,b:2}));"},{title:"Unpairs",code:"var unpairs = struct.pairs(\"un\");\n\nconsole.log(unpairs([['a',1],['b',2]]));"}]},"struct:index":{title:"index [ ... ]",introduce:"<code>struct.index</code> fast find value index in Array | Object",usages:['firstIndex -> struct.index("first")','lastIndex -> struct.index("last")','single -> struct.index("one")',"index -> struct.index()","","index(arr,idf)"],params:[{name:"arr",type:"Array"},{name:"idf",type:"AnyType"}],info:"<p><code>idf</code> support regexp</p>",examples:[{title:"Basic usage",code:"var index = struct.index();\n\n// find number 1 indexs collection\nconsole.log(index([2,3,4,1,2,4,2,1,1],1));"},{title:"First Index",code:'var findex = struct.index("first");\n\nconsole.log(findex([2,3,4,1,2,4,2,1,1],1));'},{title:"Last Index",code:'var lindex = struct.index("last");\n\nconsole.log(lindex([2,3,4,1,2,4,2,1,1],1));'},{title:"Get first SingleValue",code:'var one = struct.index("one");\n\nconsole.log(one([2,4,2,1,1],function(res){\n\treturn res>3;\n}));'}]},"struct:random":{title:"random [ ... ]",introduce:"<code>struct.random</code> random someting custom",usages:['rInt -> struct.random("int")','rFloat -> struct.random("float")','rString -> struct.random("string")','rBool -> struct.random("boolean")','rChar -> struct.random("char")','rDate -> struct.random("date")','rHex -> struct.random("hex")','rDice -> struct.random("dice")',"rDefault -> struct.random() -> Math.random","","rInt(min,max)","rFloat(min,max,fix)","rBool(range)","rChar(all,upper)","rString(leng,all,upper)","rHex(format)","rDate()","rDice(max)"],params:[{name:"min",type:"Number"},{name:"max",type:"Number"},{name:"fix",type:"Number"},{name:"range",type:"Number"},{name:"all",type:"Boolean"},{name:"upper",type:"Boolean"},{name:"leng",type:"Number"},{name:"format",type:"Boolean"}],info:" <p> <code>upper</code> setting the uppercase character</p><p>the range is gona be int <code>1-100</code> number like persistent</p>",examples:[{title:"Basic usage",code:'var random = struct.random("int");\nconsole.log(random(1,8));'},{title:"Float",code:'var random = struct.random("float");\nconsole.log(random(1,3.2,6/*fixed*/));'},{title:"Range boolean",code:'var random = struct.random("bool");\nconsole.log(random(40));'},{title:"String",code:'var random = struct.random("string");\nconsole.log(random(8,false,true));'}]},"struct:string":{title:"string [ ... ]",introduce:"<code>struct.string</code> method to deal with format",usages:[" toString -> struct.string()",' trim -> struct.string("trim")',' trimLeft -> struct.string("trimLeft")',' trimRight -> struct.string("trimRight")',' camelize -> struct.string("came")',' capitalize -> struct.string("capit")',' rize -> struct.string("rize")',"","trim(str)"],params:[{name:"str",type:"String"}],examples:[{title:"Basic usage",code:'var trim = struct.string("trim");\nconsole.log(trim("  Buke Gun "));'},{title:"Camelize",code:'var came = struct.string("came");\nconsole.log(came("background-color"));\nconsole.log(came("name_gen"));\nconsole.log(came("font-size"));'},{title:"Rize",code:'var rize = struct.string("rize");\nconsole.log(rize("fontSize"));\nconsole.log(rize("borderTop"));'}]},"struct:assembly":{title:"assembly [ ... ]",introduce:"<code>struct.assembly</code> provide some computer at the bottom of the method",usages:[' atob -> struct.assembly("atob")',' btoa -> struct.assembly("btoa")',' utob -> struct.assembly("utob")',' btou -> struct.assembly("btou")',"","atob(str)"],info:"\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Assembly</th>\n\t\t\t<th>Info</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>btoa</td>\n\t\t\t<td>convert str to Base64 encoding</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>atob</td>\n\t\t\t<td>decode convert Base64 to str</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>utob</td>\n\t\t\t<td>convert utf8(all lang) Base64 to str</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>btou</td>\n\t\t\t<td>decode convert Base64 to utf8-str</td>\n\t\t</tr>\n\t</tbody>\n</table>\n",params:[{name:"str",type:"String"}],examples:[{title:"Basic usage",code:'var atob = struct.assembly("atob");\nconsole.log(atob("Buke"));'}]},"struct:doom":{title:"doom [ template ]",introduce:"<code>DOOM</code> slim fast JavaScript template, with <b>precomplete, chache, performance</b>",usages:[" doom -> struct.doom(setting)"," doom(str)"],params:[{name:"str",type:"String"},{name:"setting",type:"Object"},{name:"setting:interpolate",type:"String"},{name:"setting:escape",type:"String"},{name:"setting:command",type:"String"},{name:"setting:evaluate",type:"String"}],related:[{name:"view.mount",target:"view:mount"},{name:"view.render",target:"view:render"}],info:'<p>DOOM is <b>[ fast, precomplete, cache, dynamic parameter ]</b> template engine </p>\n<p>DOOM can be regarded as a compiler, build string template like <code>mustache</code>, there use some grammar as :</p>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Grammar</th>\n\t\t\t<th>Format</th>\n\t\t\t<th>RegExp</th>\n\t\t\t<th>Info</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>interpolate</td>\n\t\t\t<td>&#123;&#123;# &#125;&#125;</td>\n\t\t\t<td>&#123;&#123;#([\\s\\S]+?)&#125;&#125;</td>\n\t\t\t<td>directly output variable</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>escape</td>\n\t\t\t<td>&#123;&#123;- &#125;&#125;</td>\n\t\t\t<td>&#123;&#123;-([\\s\\S]+?)&#125;&#125;</td>\n\t\t\t<td>output variable with <b>escape</b> (prevent being  XSS attacked)</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>command</td>\n\t\t\t<td>&#123;&#123;* &#125;&#125;</td>\n\t\t\t<td>&#123;&#123;*([\\s\\S]+?)&#125;&#125;</td>\n\t\t\t<td>extra command parse with doom grammar</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>evaluate</td>\n\t\t\t<td>&#123;&#123;&nbsp; &#125;&#125;</td>\n\t\t\t<td>&#123;&#123;([\\s\\S]+?)&#125;&#125;</td>\n\t\t\t<td>parse normal JavaScript code</td>\n\t\t</tr>\n\t</tbody>\n</table>\n<br>\n<br>\n<p>DOOM bind some command grammar, Usually they are used to reduce the code size</p>\n<table style="table-layout:auto">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Command</th>\n\t\t\t<th>Usage</th>\n\t\t\t<th>Info</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>exist(if)</td>\n\t\t\t<td style="white-space:nowrap; color:#778e9c">&#123;&#123;*exist [var]&#125;&#125; ,<br>\n\t\t\t&#123;&#123;*exist [var] then [arguments]&#125;&#125;\n\t\t\t</td>\n\t\t\t<td>check the variable if exist, <code>then</code> means use some variable. not as function, should use with <code>&#123;&#123;*end&#125;&#125;</code> together</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>each(for)</td>\n\t\t\t<td style="white-space:nowrap; color:#778e9c">&#123;&#123;*each [..args] in [list]&#125;&#125;</td>\n\t\t\t<td>each method given a simple way to loop the (Array|Object), should use with <code>&#123;&#123;*end&#125;&#125;</code> together</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>not</td>\n\t\t\t<td style="white-space:nowrap; color:#778e9c">&#123;&#123;*not [value] with [list]&#125;&#125;</td>\n\t\t\t<td>simple way to fast pull(not) value in [list], it would change list</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>extend</td>\n\t\t\t<td style="white-space:nowrap; color:#778e9c">&#123;&#123;*extend [target] with [list]&#125;&#125;</td>\n\t\t\t<td>simple way extend target into [list]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>map</td>\n\t\t\t<td style="white-space:nowrap; color:#778e9c">&#123;&#123;*map [list] use [param]&#125;&#125;</td>\n\t\t\t<td>directly map list use (param) - struct.map</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>find</td>\n\t\t\t<td style="white-space:nowrap; color:#778e9c">&#123;&#123;*find [list] use [param]&#125;&#125;</td>\n\t\t\t<td>directly filter list use (param) - struct.find</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>unique</td>\n\t\t\t<td style="white-space:nowrap; color:#778e9c">&#123;&#123;*unique [list]&#125;&#125;<br>\n\t\t\t&#123;&#123;*unique:fast [list]&#125;&#125;</td>\n\t\t\t<td>unique array - struct.unique</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>...</td>\n\t\t\t<td></td>\n\t\t\t<td></td>\n\t\t</tr>\n\t</tbody>\n</table>\n',examples:[{title:"Basic usage",code:'var doom = struct.doom();\n//Compiling templates\nvar bt = doom("&lt;b&gt;Hello &#123;&#123;#name&#125;&#125;&lt;/b&gt;");\nconsole.log(bt({ name: "&lt;Buke&gt;" }));'},{title:"Escape",code:'var doom = struct.doom();\n//Compiling templates\nvar bt = doom("HTML-> &#123;&#123;-tag&#125;&#125;");\nconsole.log(bt({\n\ttag: "&lt;script&gt;alert()&lt;/script&gt;"\n}));'},{title:"Parse Javascript",code:'var doom = struct.doom();\n//Compiling templates\nvar bt = doom(\n\t"&#123;&#123; if(score>60){ &#125;&#125;"+\n\t"Awesame! you have pass this test."+\n\t"&#123;&#123; }else{ &#125;&#125;"+\n\t"Fail! you may retry this test."+\n\t"&#123;&#123; } &#125;&#125;"\n);\nconsole.log(bt({ score:42 }));\nconsole.log(bt({ score:98 }));'},{title:"Use build-in Command",preview:"tpl",code:'var doom = struct.doom();\nvar data = { \n\tmembers:[\n\t\t{ name:"Cloud" , score:62 },\n\t\t{ name:"Buke"  , score:98 },\n\t\t{ name:"Uncle" , score:12 },\n\t\t{ name:"Shougo", score:85 }\n\t]\n};\n\nvar bt = doom(\n\t"&lt;ul&gt;"+\n\t"&#123;&#123;* each [people] in members &#125;&#125;"+\n\t"\t&lt;li&gt;"+\n\t"\t\t &#123;&#123;-people.name&#125;&#125; - "+\n\t"\t\t &#123;&#123;-people.score&#125;&#125; "+\n\t"\t&lt;/li&gt;"+\n\t"&#123;&#123;* end &#125;&#125;"+\n\t"&lt;/ul&gt;"\n);\n// mount in dom\ndocument.getElementById("tpl")\n\t\t\t\t.innerHTML = bt(data);'},{title:"Use command [unique]",code:'var doom = struct.doom();\nvar data = {\n\tarr: [2,3,1,4,2,1,4,5,6,3,4,1,8,6,7]\n};\n\nvar bt = doom(\n\t"{{*unique:fast arr}}"+\n\t"{{console.log(arr)}}"\n);\nbt(data);'}]}})})),define("actions/api/model",["aix","data/apidata"],(function(t,e){return new t.model({data:e})})),define("modules/code",["struct"],(function(struct){"use strict";var slice=struct.slice(),each=struct.op("array"),code={};return code.make=function(){each(slice(document.querySelectorAll(".code")),(function(elm){var runcode=elm.innerText,runbtn=document.createElement("button");runbtn.setAttribute("class","btn btn-fb-default run-code"),runbtn.innerHTML="run <i class='ion-compose'></i>",runbtn.onclick=function(event){return event.preventDefault(),event.stopPropagation(),eval('(function(){ "use strict";\n'+runcode+"\n}())")},elm.parentNode.appendChild(runbtn)}))},code})),define("text!actions/api/tpl",[],(function(){return'<article class="api">\n\t<header class="api-introduce">\n\t\t<h3 t=1><i class="ion-aperture" style="color:#8a3838"></i> {{#title}}</h3>\n\t\t<p>{{#introduce}}</p>\n\t</header>\n\n\t<div class="api-usage">\n\t\t<h3 t=2>Usage</h3>\n\t\t{{* each [us] in usages }}\n\t\t\t{{ if(us!==""){ }}\n\t\t\t<div class="usage-example">{{#us}}</div>\n\t\t\t{{ } else { }}\n\t\t\t<br>\n\t\t\t{{ } }}\n\t\t{{* end }}\n\t</div>\n\n\t{{* exist params }}\n\t<div class="api-params">\n\t\t<h3 t=3>Params</h3>\n\t\t{{* each [param] in params }}\n\t\t<div class="param">\n\t\t\t<b><i class="ion-ios-cog" style="vertical-align: -1px;"></i> {{#param.name}}</b>\n\t\t\t<span>[ {{#param.type}} ]</span>\n\t\t</div>\n\t\t{{* end }}\n\t</div>\n\t{{* end }}\n\n\t{{* exist info }}\n\t<div class="api-info">\n\t\t<h3 t=4>Info</h3>\n\t\t<div>{{#info}}</div>\n\t</div>\n\t{{* end }}\n\n\t{{* exist related }}\n\t<div class="api-related">\n\t\t<h3 t=5>Related</h3>\n\t\t<div>\n\t\t\t{{* each [link] in related }}\n\t\t\t<a class="relate-link" href="#api@s={{#link.target}}"><i class="ion-star"></i> {{#link.name}}</a>\n\t\t\t{{* end }}\n\t\t</div>\n\t</div>\n\t{{* end }}\n\n\t{{* exist examples }}\n\t<div class="api-examples">\n\t\t<h3 t=6>Examples</h3>\n\n\t\t{{* each [e] in examples }}\n\t\t<div class="example">\n\t\t\t<h5 tc=6>{{#e.title}}</h5>\n\t\t\t<section style="display:flex">\n\t\t\t\t<div class="example-code">\n\t\t\t\t\t<pre class="{{#e.not ? "not-code" : "code"}} sh_javascript" \n\t\t\t\t\t\tstyle="background-color: #f7f7f7;">{{#e.code}}</pre>\n\t\t\t\t</div>\n\n\t\t\t\t<div class="example-preview">\n\t\t\t\t{{ if(e.preview){ }}\n\t\t\t\t\t<div class="example-mount" id="{{#e.preview}}"></div>\n\t\t\t\t{{ } }}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>\n\t\t{{* end }}\n\t</div>\n\t{{* end }}\n\t<hr>\n</article>\n'})),define("actions/api/view",["aix","modules/tags","modules/code","text!actions/api/tpl"],(function(t,e,n,r){return new t.view({root:document.getElementById("app"),template:r,events:{beforeRender:function(t){console.log("#api randering")},completed:function(t){sh_highlightDocument(e.make(n.make()))}}})})),define("actions/api/export",["actions/api/model","actions/api/view"],(function(t,e){var n;return t.on("change",(function(){e.render(t.get(n||"model.get"))})),function(r){(n=r)&&(window.scrollTo(0,0),e.render(t.get(r)))}})),define("data/searchlist",[],(function(){return Object.freeze([{n:"model:get",k:["get","json","data"],t:1},{n:"model:set",k:["set","data"],t:1},{n:"model:rm",k:["remove","data"],t:1},{n:"model:moc",k:["moc","data"],t:1},{n:"model:toJSON",k:["tojson","data"],t:1},{n:"model:fetch",k:["fetch","save","update","data"],t:1},{n:"model:send",k:["send","data"],t:1},{n:"model:sync",k:["sync","post","pull","data"],t:1},{n:"model:store",k:["store","save","data"],t:1},{n:"model:validate",k:["validate","data"],t:1},{n:"model:events",k:["events"],t:1},{n:"model:extend",k:["extend","super","class"],t:1},{n:"view:mount",k:["mount","init"],t:1},{n:"view:render",k:["render","update"],t:1},{n:"view:props",k:["props"],t:1},{n:"view:events",k:["events"],t:1},{n:"view:extend",k:["extend","super","class"],t:1},{n:"route:listen",k:["listen","start"],t:1},{n:"route:stop",k:["unlisten","stop"],t:1},{n:"route:assign",k:["assign","goto"],t:1},{n:"route:events",k:["events"],t:1},{n:"route:extend",k:["extend","super","class"],t:1},{n:"struct:define",k:["define","property"],t:2},{n:"struct:extend",k:["extend","compress"],t:2},{n:"struct:depextend",k:["depextend","compress"],t:2},{n:"struct:keys",k:["keys"],t:2},{n:"struct:noop",k:["noop","null"],t:2},{n:"struct:clone",k:["clone","copy"],t:2},{n:"struct:depclone",k:["depclone","copy"],t:2},{n:"struct:not",k:["not","filter"],t:2},{n:"struct:cat",k:["cat","filter"],t:2},{n:"struct:slice",k:["slice","copy"],t:2},{n:"struct:find",k:["find","filter"],t:2},{n:"struct:reject",k:["reject","filter"],t:2},{n:"struct:every",k:["every","all"],t:2},{n:"struct:some",k:["some","only"],t:2},{n:"struct:diff",k:["diff"],t:2},{n:"struct:intsec",k:["intsec"],t:2},{n:"struct:chunk",k:["chunk"],t:2},{n:"struct:compact",k:["compact"],t:2},{n:"struct:pluck",k:["pluck"],t:2},{n:"struct:groupBy",k:["groupby"],t:2},{n:"struct:countBy",k:["countby"],t:2},{n:"struct:concat",k:["concat"],t:2},{n:"struct:cast",k:["cast"],t:2},{n:"struct:shuffle",k:["shuffle"],t:2},{n:"struct:first",k:["first"],t:2},{n:"struct:last",k:["last"],t:2},{n:"struct:flat",k:["flat"],t:2},{n:"struct:merge",k:["merge"],t:2},{n:"struct:auto",k:["auto"],t:2},{n:"struct:part",k:["part"],t:2},{n:"struct:once",k:["once"],t:2},{n:"struct:eq",k:["equal"],t:2},{n:"struct:values",k:["values"],t:2},{n:"struct:memoize",k:["memoize"],t:2},{n:"struct:negate",k:["negate"],t:2},{n:"struct:link",k:["link","wrap"],t:2},{n:"struct:size",k:["size"],t:2},{n:"struct:now",k:["now","time"],t:2},{n:"struct:sort",k:["sort"],t:2},{n:"struct:each",k:["each","loop","forin"],t:2},{n:"struct:map",k:["map","hook"],t:2},{n:"struct:has",k:["haskey"],t:2},{n:"struct:type",k:["type","is"],t:2},{n:"struct:html",k:["html","strip"],t:2},{n:"struct:unique",k:["unique"],t:2},{n:"struct:convert",k:["convert","tostring","hex","rgb"],t:2},{n:"struct:pull",k:["pullleft","pullright","pullwith"],t:2},{n:"struct:drop",k:["dropleft","dropright","dropto"],t:2},{n:"struct:param",k:["param","parse","stringify"],t:2},{n:"struct:ajax",k:["ajax","ajaxget","ajaxpost"],t:2},{n:"struct:event",k:["events"],t:2},{n:"struct:prop",k:["prop","get","set"],t:2},{n:"struct:pairs",k:["pairs"],t:2},{n:"struct:index",k:["index","idx"],t:2},{n:"struct:random",k:["random"],t:2},{n:"struct:string",k:["string","rize","capit","came"],t:2},{n:"struct:assembly",k:["assembly","atob","utf8","btoa"],t:2},{n:"struct:doom",k:["doom","template"],t:2}])})),define("modules/search",["struct","data/searchlist"],(function(t,e){"use strict";var n=t.doom(),r=t.size(),a=t.find(),o=t.has(),s=t.string("trim"),i=e,c=document.getElementById("search"),u=document.getElementById("search-result"),l=n("{{*each [item] in list}}\t <a href='#api@s={{#item.n}}' p=\"{{#(item.t===1 ? 'aix' : 'struct')}}\">\t <i class='{{#(item.t===1 ? 'ion-ios-navigate'  :'ion-ios-circle-filled')}}'></i> \t {{#item.n}}</a>{{*end}}");return c.addEventListener("input",(function(t){t.stopPropagation();var e=s(this.value);if(r(e)>1){var n=new RegExp(e,"i"),c=a(i,(function(t){return o(t.k,n)}));u.innerHTML=l({list:c})}else u.innerHTML=""}))})),define("modules/common",["struct","aix","modules/search"],(function(t,e){"use strict";var n=t.slice(),r=t.each("array"),a=n(document.querySelectorAll(".toggle-button")).concat(n(document.querySelectorAll(".s-menu-tab"))),o=function(t){t.setAttribute("class",t.getAttribute("class").replace(/\s+active/,""))};return new e.view({root:document.getElementById("menu"),events:{"click:.toggle-button":function(t){t.preventDefault(),t.stopPropagation(),/active/.test(this.getAttribute("class"))||(this.setAttribute((r(a,o),"class"),this.getAttribute("class")+" active"),document.getElementById("tab-"+this.getAttribute("id")).setAttribute("class","s-menu-tab active"))}}})})),define("route",["aix","struct","data/rulelist","actions/introduce/export","actions/api/export","modules/common"],(function(t,e,n,r,a){"use strict";e.root.aix=t;var o=e.has(),s=e.link(),i={api:function(t){if(o(n.api,t.s))return t.s;throw alert("do not get fuck off hash change?"),new TypeError("fuck you with make bich off hash url?")}};return new t.route({routes:{"^introduce$":"index","^api$":"api"},actions:{index:r,api:s(i.api,a)}}).listen(window.location.hash?void 0:"introduce")})),this.sh_languages||(this.sh_languages={});var sh_requests={};define("sh_main",(function(){})),this.sh_languages||(this.sh_languages={}),
sh_languages.javascript=[[[/\/\/\//g,"sh_comment",1],[/\/\//g,"sh_comment",7],[/\/\*\*/g,"sh_comment",8],[/\/\*/g,"sh_comment",9],[/\b(?:abstract|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|false|final|finally|for|function|goto|if|implements|in|instanceof|interface|native|new|null|private|protected|prototype|public|return|static|super|switch|synchronized|throw|throws|this|transient|true|try|typeof|var|volatile|while|with)\b/g,"sh_keyword",-1],[/(\+\+|--|\)|\])(\s*)(\/=?(?![*\/]))/g,["sh_symbol","sh_normal","sh_symbol"],-1],[/(0x[A-Fa-f0-9]+|(?:[\d]*\.)?[\d]+(?:[eE][+-]?[\d]+)?)(\s*)(\/(?![*\/]))/g,["sh_number","sh_normal","sh_symbol"],-1],[/([A-Za-z$_][A-Za-z0-9$_]*\s*)(\/=?(?![*\/]))/g,["sh_normal","sh_symbol"],-1],[/\/(?:\\.|[^*\\\/])(?:\\.|[^\\\/])*\/[gim]*/g,"sh_regexp",-1],[/\b[+-]?(?:(?:0x[A-Fa-f0-9]+)|(?:(?:[\d]*\.)?[\d]+(?:[eE][+-]?[\d]+)?))u?(?:(?:int(?:8|16|32|64))|L)?\b/g,"sh_number",-1],[/"/g,"sh_string",10],[/'/g,"sh_string",11],[/~|!|%|\^|\*|\(|\)|-|\+|=|\[|\]|\\|:|;|,|\.|\/|\?|&|<|>|\|/g,"sh_symbol",-1],[/\{|\}/g,"sh_cbracket",-1],[/\b(?:Math|Infinity|NaN|undefined|arguments)\b/g,"sh_predef_var",-1],[/\b(?:Array|Boolean|Date|Error|EvalError|Function|Number|Object|RangeError|ReferenceError|RegExp|String|SyntaxError|TypeError|URIError|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt)\b/g,"sh_predef_func",-1],[/(?:[A-Za-z]|_)[A-Za-z0-9_]*(?=[ \t]*\()/g,"sh_function",-1]],[[/$/g,null,-2],[/(?:<?)[A-Za-z0-9_\.\/\-_~]+@[A-Za-z0-9_\.\/\-_~]+(?:>?)|(?:<?)[A-Za-z0-9_]+:\/\/[A-Za-z0-9_\.\/\-_~]+(?:>?)/g,"sh_url",-1],[/<\?xml/g,"sh_preproc",2,1],[/<!DOCTYPE/g,"sh_preproc",4,1],[/<!--/g,"sh_comment",5],[/<(?:\/)?[A-Za-z](?:[A-Za-z0-9_:.-]*)(?:\/)?>/g,"sh_keyword",-1],[/<(?:\/)?[A-Za-z](?:[A-Za-z0-9_:.-]*)/g,"sh_keyword",6,1],[/&(?:[A-Za-z0-9]+);/g,"sh_preproc",-1],[/<(?:\/)?[A-Za-z][A-Za-z0-9]*(?:\/)?>/g,"sh_keyword",-1],[/<(?:\/)?[A-Za-z][A-Za-z0-9]*/g,"sh_keyword",6,1],[/@[A-Za-z]+/g,"sh_type",-1],[/(?:TODO|FIXME|BUG)(?:[:]?)/g,"sh_todo",-1]],[[/\?>/g,"sh_preproc",-2],[/([^=" \t>]+)([ \t]*)(=?)/g,["sh_type","sh_normal","sh_symbol"],-1],[/"/g,"sh_string",3]],[[/\\(?:\\|")/g,null,-1],[/"/g,"sh_string",-2]],[[/>/g,"sh_preproc",-2],[/([^=" \t>]+)([ \t]*)(=?)/g,["sh_type","sh_normal","sh_symbol"],-1],[/"/g,"sh_string",3]],[[/-->/g,"sh_comment",-2],[/<!--/g,"sh_comment",5]],[[/(?:\/)?>/g,"sh_keyword",-2],[/([^=" \t>]+)([ \t]*)(=?)/g,["sh_type","sh_normal","sh_symbol"],-1],[/"/g,"sh_string",3]],[[/$/g,null,-2]],[[/\*\//g,"sh_comment",-2],[/(?:<?)[A-Za-z0-9_\.\/\-_~]+@[A-Za-z0-9_\.\/\-_~]+(?:>?)|(?:<?)[A-Za-z0-9_]+:\/\/[A-Za-z0-9_\.\/\-_~]+(?:>?)/g,"sh_url",-1],[/<\?xml/g,"sh_preproc",2,1],[/<!DOCTYPE/g,"sh_preproc",4,1],[/<!--/g,"sh_comment",5],[/<(?:\/)?[A-Za-z](?:[A-Za-z0-9_:.-]*)(?:\/)?>/g,"sh_keyword",-1],[/<(?:\/)?[A-Za-z](?:[A-Za-z0-9_:.-]*)/g,"sh_keyword",6,1],[/&(?:[A-Za-z0-9]+);/g,"sh_preproc",-1],[/<(?:\/)?[A-Za-z][A-Za-z0-9]*(?:\/)?>/g,"sh_keyword",-1],[/<(?:\/)?[A-Za-z][A-Za-z0-9]*/g,"sh_keyword",6,1],[/@[A-Za-z]+/g,"sh_type",-1],[/(?:TODO|FIXME|BUG)(?:[:]?)/g,"sh_todo",-1]],[[/\*\//g,"sh_comment",-2],[/(?:<?)[A-Za-z0-9_\.\/\-_~]+@[A-Za-z0-9_\.\/\-_~]+(?:>?)|(?:<?)[A-Za-z0-9_]+:\/\/[A-Za-z0-9_\.\/\-_~]+(?:>?)/g,"sh_url",-1],[/(?:TODO|FIXME|BUG)(?:[:]?)/g,"sh_todo",-1]],[[/"/g,"sh_string",-2],[/\\./g,"sh_specialchar",-1]],[[/'/g,"sh_string",-2],[/\\./g,"sh_specialchar",-1]]],define("sh_js",["sh_main"],(function(){}));